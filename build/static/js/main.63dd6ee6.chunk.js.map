{"version":3,"sources":["app/creator/duck/actions.js","app/creator/duck/reducers.js","app/creator/duck/index.js","app/questioncatalog/duck/actions.js","app/questioncatalog/duck/reducers.js","app/questioncatalog/duck/index.js","reducers.js","store.js","app/creator/AmazonConnectConfiguratorComponent.jsx","app/creator/duck/amazon-connect/emptycontactflow.js","app/creator/duck/amazon-connect/contactflowerror.js","app/creator/duck/amazon-connect/contactflowend.js","app/creator/duck/amazon-connect/contactflowtransfer.js","app/creator/duck/amazon-connect/contactflowlogging.js","app/creator/duck/amazon-connect/contactflowvoice.js","app/creator/duck/amazon-connect/contactflowplayprompt.js","app/creator/duck/amazon-connect/contactflowrepeat.js","app/creator/duck/amazon-connect/contactflowattribute.js","app/creator/duck/amazon-connect/contactflowinvokeexternal.js","app/creator/duck/amazon-connect/contactflowuserinput.js","app/creator/duck/questions/defaultText.js","app/creator/duck/amazon-connect/contactflowstaticstart.js","app/creator/duck/amazon-connect/contactflowstaticend.js","app/creator/duck/amazon-connect/contactflowquestion.js","app/creator/duck/amazon-connect/contactflowstore.js","app/creator/duck/amazon-connect/contactflowquestiondate.js","app/creator/duck/amazon-connect/contactflow.js","app/creator/duck/foo.js","app/creator/duck/bar.js","app/creator/duck/operations.js","app/creator/AmazonConnectConfiguratorContainer.js","app/creator/CreatorComponent.jsx","app/creator/CreatorContainer.js","app/questioncatalog/RadioOptionComponent.jsx","app/questioncatalog/duck/operations.js","app/questioncatalog/RadioOptionContainer.js","app/questioncatalog/NextQuestionMapComponent.jsx","app/questioncatalog/NextQuestionMapContainer.js","app/questioncatalog/ScoreComponent.jsx","app/questioncatalog/ScoreContainer.js","app/questioncatalog/QuestionComponent.jsx","app/questioncatalog/QuestionContainer.js","app/questioncatalog/AddQuestionComponent.jsx","app/questioncatalog/AddQuestionContainer.js","app/questioncatalog/ScoreThresholdComponent.jsx","app/questioncatalog/ScoreThresholdContainer.js","app/questioncatalog/QuestionCatalogComponent.jsx","app/questioncatalog/QuestionCatalogContainer.js","app/demopage/DemoPageComponent.jsx","app/App.js","index.js"],"names":["setQuestionnaireStrings","stringMap","type","payload","setQuestionnaireOrder","order","setCreatedJSON","data","setAmazonConnectData","addKey","key","setQuestionCount","questionCount","initialState","undefined","language","chariteData","connectConf","uuidList","lambdaKeys","basename","creatorReducer","state","action","Object","assign","push","uuid","indexOf","quesitonCount","value","questionActionTypes","newQuestionActionTypes","messageActionTypes","scoreThresholdActionTypes","changeQuestionAttribute","attribute","updateNewRadioOption","option","toggleNewQuestionModal","findTargetQuestionIndex","questions","findIndex","q","initialStateQuestions","Sample","map","s","initialStateCategories","categories","initialStateScoreThresholdMap","contact","threshold","recoms","isDanger","isSafe","personalInfo","symptoms","respiratorySymptoms","illnesses","medication","initialStateEditQuestion","id","category","text","inputType","options","nextQuestionMap","scoreMap","initialStateCategoryBadges","initialStateNewQuestion","showNewQuestionModal","initialStateMessages","errorMessage","infoMessage","successMessage","initialStateNewRadioOption","newRadioOption","initialStateInputTypes","inputTypes","questionCatalogReducer","combineReducers","index","targetQuestionIndex","targetQuestion","UPDATE_QUESTION","REMOVE_QUESTION","ADD_QUESTION","MOVE_QUESTION","CHANGE_QUESTION_ATTRIBUTE","question","editQuestion","filter","some","arr","newIndex","direction","length","splice","JSON","parse","stringify","scoreThresholdMap","UPDATE_RECOM_THRESHOLD","UPDATE_RECOM_TEXT","categoryBadges","newQuestion","TOGGLE_NEWQUESTION_MODAL","CHANGE_NEWQUESTION_ATTRIBUTE","attr","messages","msg","creator","questioncatalog","questioncatalogReducer","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","AmazonConnectConfiguratorComponent","props","createContactFlow","downloadJSON","handleSetBasename","ButtonGroup","size","FormControl","onChange","event","target","Button","onClick","disabled","defaultProps","version","positionX","positionY","description","snapToGrid","propTypes","startUUID","PropTypes","string","isRequired","name","number","bool","EmptyContactFlow","modules","start","metadata","entryPointPosition","x","y","status","errorText","useDynamic","ContactFlowError","ownUUID","transitionUUID","branches","condition","transition","parameters","namespace","position","ContactFlowEnd","endPoint","errorUUID","resourceName","ContactFlowTransfer","ContactFlow","ContactFlowLogging","voiceType","ContactFlowVoice","textToSpechType","ContactFlowPlayPrompt","ContactFlowRepeat","any","ContactFlowAttribute","arrayOf","ContactFlowInvokeExternal","dynamicParameters","dynamicMetadata","console","log","forEach","i","dynamicParamter","maxDigits","object","repeatUUID","transitionUUIDs","optionsUUIDMap","dispatch","func","ContactFlowUserInput","conditionMetadata","staticBranches","dynamicBranches","val","conditionMetadataObj","toString","contactFlowAttribute","score","hasOwnProperty","conditionType","conditionValue","part1","part2","concat","generateTextFromOptions","defaultText","greetingText","de","en","repeatText","defaultVoice","ContactFlowStaticStart","firstQuestionName","loggingUUUID","startErrorUUID","startEndUUID","startTransferUUID","voiceUUID","scoreMapUUID","greetingUUID","staticStart","startModules","startError","startEnd","startTransfer","startLogging","startVoice","scoreMapAttribute","startGreeting","getState","ContactFlowStaticEnd","finishUUID","endErrorUUID","lambdaUUID","recomSpeechUUID","staticEnd","endModules","endError","finishLine","lambdaCall","recomVoice","ContactFlowStore","blyatUUID","useDynamicForEncryptionKeys","useDynamicForTerminatorDigits","countryCodePrefix","ContactFlowQuestion","transferUUIDs","uuidMap","xxxMap","offsetX","offsetY","endUUID","someUUIDs","Array","from","Set","find","u","singleTransferUUID","contactFlowQuestion","contactFlowEnd","contactFlowRepeat","contactFlowError","uniqueTransferUUIDs","t","fooName","current","nextIndex","slice","nextQuestion","contactFlowTransfer","contactFlowUserInput","ContactFlowQuestionDate","contactFlowStore","CATEGORIES","QUESTION","QUESTIONNAIRE_ORDER","comment","QUESTIONNAIRE","createJSON","strings","keys","createDateQuestion","createRadioQuestion","mapDispatchToProps","questionIDList","questionIDSet","qCount","contactFlow","contactFlowName","cf","staticStartName","staticEndName","jsonMap","zip","JSZip","file","generateAsync","then","content","fileDownload","setBasename","connect","ownProps","CreatorComponent","getQuestionsAndGenerateJSONMock","availableLanguages","handleLanguageChange","createJSONFromQuestionCatalog","bla","Container","style","textAlign","color","to","ButtonToolbar","className","lang","variant","display","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","Form","Group","controlId","Label","Control","rows","url","setLanguage","RadioOptionComponent","handleUpdateRadioOption","handleUpdateNewRadioOption","handleAddNewRadioOption","handleRemoveRadioOption","Col","xs","opt","Row","placeholder","handleRemoveQuestion","handleMoveQuestion","moveQuestion","existingQuestion","NextQuestionMapComponent","handleUpdateNextQuestionMapOption","defaultValue","j","ScoreComponent","handleUpdateScoreMapOption","QuestionComponent","handleToggleNextQuestionMap","handleToggleScoreMap","total","categoryMap","handleChangeQuestionID","handleChangeQuestionText","handleChangeQuestionCategory","changeChangeQuestionType","border","Badge","cat","Check","label","checked","AddQuestionComponent","handleToggleNewQuestionModal","handleChangeNewQuestion","handleAddQuestion","questionTypes","requiredData","Modal","show","onHide","centered","closeButton","Alert","width","defaultChecked","c","Footer","d","includes","block","changeNewQuestionAttribute","newQuestionUUID","ScoreThresholdMapComponent","handleUpdateRecomThreshold","handleUpdateRecomText","totalScoreQuestions","scoreThresholds","catTresh","InputGroup","Prepend","Text","getSomething","f","updateRecomThreshold","updateRecomText","ScoreThresholdComponent","QuestionCatalogComponent","array","DemoPageComponent","Jumbotron","App","exact","path","component","Creator","QuestionCatalog","preloadedState","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63dd6ee6.chunk.js","sourcesContent":["export const SET_QUESTIONNAIRE_STRING_MAP = \"SET_QUESTIONNAIRE_STRING_MAP\"\r\nexport const SET_QUESTIONNAIRE_ORDER = \"SET_QUESTIONNAIRE_ORDER\"\r\nexport const SET_LANGUAGE = \"SET_LANGUAGE\"\r\nexport const SET_CREATED_JSON = \"SET_CREATED_JSON\"\r\nexport const SET_CREATED_AMAZON_CONNECT_CONFIG = \"SET_CREATED_AMAZON_CONNECT_CONFIG\"\r\nexport const SET_CREATED_AMAZON_CONNECT_DATA = \"SET_CREATED_AMAZON_CONNECT_DATA\"\r\nexport const ADD_CONTACT_FLOW = \"ADD_CONTACT_FLOW\"\r\nexport const ADD_UUID = \"ADD_UUID\"\r\nexport const ADD_KEY = \"ADD_KEY\"\r\nexport const SET_QUESTION_COUNT = \"SET_QUESTION_COUNT\"\r\nexport const SET_BASENAME = \"SET_BASENAME\"\r\n\r\nexport const setQuestionnaireStrings = stringMap => ({\r\n  type: SET_QUESTIONNAIRE_STRING_MAP,\r\n  payload: { stringMap }\r\n})\r\n\r\nexport const setQuestionnaireOrder = order => ({\r\n  type: SET_QUESTIONNAIRE_ORDER,\r\n  payload: { order }\r\n})\r\n\r\nexport const setLanguage = language => ({\r\n  type: SET_LANGUAGE,\r\n  payload: { language }\r\n})\r\n\r\nexport const setCreatedJSON = data => ({\r\n  type: SET_CREATED_JSON,\r\n  payload: { data }\r\n})\r\n\r\nexport const setCreatedAmazonConnectConfig = data => ({\r\n  type: SET_CREATED_AMAZON_CONNECT_CONFIG,\r\n  payload: { data }\r\n})\r\n\r\nexport const setAmazonConnectData = data => ({\r\n  type: SET_CREATED_AMAZON_CONNECT_DATA,\r\n  payload: { data }\r\n})\r\n\r\nexport const addContactFlow = contactFlow => ({\r\n  type: ADD_CONTACT_FLOW,\r\n  payload: { contactFlow }\r\n})\r\n\r\nexport const addUUID = uuid => ({\r\n  type: ADD_UUID,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const addKey = key => ({\r\n  type: ADD_KEY,\r\n  payload: { key }\r\n})\r\n\r\nexport const setQuestionCount = questionCount => ({\r\n  type: SET_QUESTION_COUNT,\r\n  payload: { questionCount }\r\n})\r\n\r\nexport const setBasename = value => ({\r\n  type: SET_BASENAME,\r\n  payload: { value }\r\n})","import {\r\n  SET_QUESTIONNAIRE_ORDER,\r\n  SET_QUESTIONNAIRE_STRING_MAP,\r\n  SET_LANGUAGE,\r\n  SET_CREATED_JSON,\r\n  SET_CREATED_AMAZON_CONNECT_CONFIG,\r\n  SET_CREATED_AMAZON_CONNECT_DATA,\r\n  ADD_UUID,\r\n  ADD_KEY,\r\n  SET_QUESTION_COUNT,\r\n  SET_BASENAME\r\n} from \"./actions\"\r\n\r\nexport const initialState = {\r\n  order: undefined,\r\n  stringMap: {'de': undefined, 'en': undefined},\r\n  language: 'en',\r\n  chariteData: undefined,\r\n  connectConf: undefined,\r\n  uuidList: [],\r\n  lambdaKeys: {\"lambdaKeys\": []},\r\n  basename: \"\"\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_QUESTIONNAIRE_ORDER:\r\n      return {\r\n        ...state,\r\n        order: action.payload.order\r\n      }\r\n    case SET_QUESTIONNAIRE_STRING_MAP:\r\n      return {\r\n        ...state,\r\n        stringMap: action.payload.stringMap\r\n      }\r\n    case SET_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.payload.language\r\n      }\r\n    case SET_CREATED_JSON:\r\n      return {\r\n        ...state,\r\n        chariteData: action.payload.data\r\n      }\r\n    case SET_CREATED_AMAZON_CONNECT_CONFIG:\r\n      return {\r\n        ...state,\r\n        connectConf: action.payload.data\r\n      }\r\n    case SET_CREATED_AMAZON_CONNECT_DATA:\r\n      const connectConf = Object.assign({}, state.connectConf, action.payload.data)\r\n      return {\r\n        ...state,\r\n        connectConf\r\n      }\r\n    case ADD_UUID:\r\n      const uuidList = [...state.uuidList]\r\n      uuidList.push(action.payload.uuid)\r\n      return {\r\n        ...state,\r\n        uuidList\r\n      }\r\n    case ADD_KEY:\r\n      let lambdaKeys = state.lambdaKeys\r\n  \r\n      if (lambdaKeys[\"lambdaKeys\"].indexOf(action.payload.key) === -1) {\r\n        lambdaKeys[\"lambdaKeys\"].push(action.payload.key)\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        lambdaKeys\r\n      }\r\n    case SET_QUESTION_COUNT:\r\n      return {\r\n        ...state,\r\n        quesitonCount: action.payload.questionCount\r\n      }\r\n    case SET_BASENAME:\r\n      return {\r\n        ...state,\r\n        basename: action.payload.value\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import creatorReducer from './reducers';\r\n\r\nexport default creatorReducer;","export const UPDATE_QUESTION = \"UPDATE_QUESTION\"\r\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\"\r\nexport const ADD_QUESTION = \"ADD_QUESTION\"\r\nexport const MOVE_QUESTION = \"MOVE_QUESTION\"\r\nexport const CHANGE_QUESTION_ATTRIBUTE = \"CHANGE_QUESTION_ATTRIBUTE\" // should make CHANGE_x obsolete\r\nexport const RENAME_QUESTION = \"RENAME_QUESTION\"\r\nexport const CHANGE_QUESTION_TEXT = \"CHANGE_QUESTION_TEXT\"\r\nexport const CHANGE_QUESTION_CATEGORY = \"CHANGE_QUESTION_CATEGORY\"\r\nexport const CHANGE_QUESTION_TYPE = \"CHANGE_QUESTION_TYPE\"\r\n\r\nexport const UPDATE_RADIO_OPTION = \"UPDATE_RADIO_OPTION\"\r\nexport const REMOVE_RADIO_OPTION = \"REMOVE_RADIO_OPTION\"\r\nexport const ADD_NEW_RADIO_OPTION = \"ADD_NEW_RADIO_OPTION\"\r\nexport const UPDATE_NEW_RADIO_OPTION = \"UPDATE_NEW_RADIO_OPTION\"\r\n\r\nexport const REMOVE_OPTIONS = \"REMOVE_OPTIONS\"\r\nexport const ADD_OPTIONS = \"ADD_OPTIONS\"\r\nexport const REMOVE_NEXTQUESTIONMAP = \"REMOVE_NEXTQUESTIONMAP\"\r\nexport const ADD_NEXTQUESTIONMAP = \"ADD_NEXTQUESTIONMAP\"\r\nexport const UPDATE_NEXTQUESTIONMAP_OPTION = \"UPDATE_NEXTQUESTIONMAP_OPTION\"\r\nexport const ADD_NEXTQUESTIONMAP_OPTION = \"ADD_NEXTQUESTIONMAP_OPTION\"\r\n\r\nexport const REMOVE_SCOREMAP = \"REMOVE_SCOREMAP\"\r\nexport const ADD_SCOREMAP = \"ADD_SCOREMAP\"\r\nexport const UPDATE_SCORENMAP_OPTION = \"UPDATE_SCOREMAP_OPTION\"\r\nexport const ADD_SCOREMAP_OPTION = \"ADD_SCOREMAP_OPTION\"\r\n\r\nexport const TOGGLE_NEWQUESTION_MODAL = \"TOGGLE_NEWQUESTION_MODAL\"\r\nexport const CHANGE_NEWQUESTION_ATTRIBUTE = \"CHANGE_NEWQUESTION_ATTRIBUTE\"\r\n\r\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\"\r\nexport const SET_INFO_MESSAGE = \"SET_INFO_MESSAGE\"\r\nexport const SET_SUCCESS_MESSAGE = \"SET_SUCCESS_MESSAGE\"\r\n\r\nexport const UPDATE_RECOM_THRESHOLD = \"UPDATE_RECOM_THRESHOLD\"\r\nexport const UPDATE_RECOM_TEXT = \"UPDATE_RECOM_TEXT\"\r\n\r\n// TODO: action to set question type ['radio', 'date']\r\n// TODO later: so many actions have same structure => DRY \r\n\r\nexport const questionActionTypes = {\r\n  UPDATE_QUESTION,\r\n  REMOVE_QUESTION,\r\n  ADD_QUESTION,\r\n  MOVE_QUESTION,\r\n  CHANGE_QUESTION_ATTRIBUTE\r\n}\r\n\r\nexport const newQuestionActionTypes = {\r\n  TOGGLE_NEWQUESTION_MODAL,\r\n  CHANGE_NEWQUESTION_ATTRIBUTE\r\n}\r\n\r\nexport const messageActionTypes = {\r\n  SET_ERROR_MESSAGE,\r\n  SET_INFO_MESSAGE,\r\n  SET_SUCCESS_MESSAGE\r\n}\r\n\r\nexport const scoreThresholdActionTypes = {\r\n  UPDATE_RECOM_THRESHOLD,\r\n  UPDATE_RECOM_TEXT\r\n}\r\n\r\n\r\nexport const updateQuestion = question => ({\r\n  type: UPDATE_QUESTION,\r\n  payload: { question }\r\n})\r\n\r\nexport const removeQuestion = uuid => ({\r\n  type: REMOVE_QUESTION,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const changeQuestionAttribute = (value, attribute, uuid) => ({\r\n  type: CHANGE_QUESTION_ATTRIBUTE,\r\n  payload: { value, attribute, uuid }\r\n})\r\n\r\nexport const moveQuestion = (uuid, direction) => ({\r\n  type: MOVE_QUESTION,\r\n  payload: { uuid, direction }\r\n})\r\n\r\nexport const updateRadioOption = (value, uuid, index) => ({\r\n  type: UPDATE_RADIO_OPTION,\r\n  payload: { value, uuid, index }\r\n})\r\n\r\nexport const removeRadioOption = (uuid, index) => ({\r\n  type: REMOVE_RADIO_OPTION,\r\n  payload: { uuid, index }\r\n})\r\n\r\nexport const addNewRadioOption = (option, uuid) => ({\r\n  type: ADD_NEW_RADIO_OPTION,\r\n  payload: { option, uuid }\r\n})\r\n\r\nexport const updateNewRadioOption = option => ({\r\n  type: UPDATE_NEW_RADIO_OPTION,\r\n  payload: { option }\r\n})\r\n\r\nexport const removeOptions = uuid => ({\r\n  type: REMOVE_OPTIONS,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const addOptions = uuid => ({\r\n  type: ADD_OPTIONS,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const removeNextQuestionMap = uuid => ({\r\n  type: REMOVE_NEXTQUESTIONMAP,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const addNextQuestionMap = uuid => ({\r\n  type: ADD_NEXTQUESTIONMAP,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const updateNextQuestionMapOption = (value, uuid, index) => ({\r\n  type: UPDATE_NEXTQUESTIONMAP_OPTION,\r\n  payload: { value, uuid, index }\r\n})\r\n\r\nexport const addNextQuestionMapOption = (uuid) => ({\r\n  type: ADD_NEXTQUESTIONMAP_OPTION,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const removeScoreMap = uuid => ({\r\n  type: REMOVE_SCOREMAP,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const addScoreMap = uuid => ({\r\n  type: ADD_SCOREMAP,\r\n  payload: { uuid }\r\n})\r\n\r\nexport const updateScoreMapOption = (value, uuid, index) => ({\r\n  type: UPDATE_SCORENMAP_OPTION,\r\n  payload: { value, uuid, index }\r\n})\r\n\r\nexport const addScoreMapOption = uuid => ({\r\n  type: ADD_SCOREMAP_OPTION,\r\n  payload: { uuid }\r\n})\r\n\r\n\r\nexport const toggleNewQuestionModal = value => ({\r\n  type: TOGGLE_NEWQUESTION_MODAL,\r\n  payload: { value }\r\n})\r\n\r\nexport const changeNewQuestionAttribute = (value, key) => ({\r\n  type: CHANGE_NEWQUESTION_ATTRIBUTE,\r\n  payload: { value, key }\r\n})\r\n\r\nexport const addQuestion = question => ({\r\n  type: ADD_QUESTION,\r\n  payload: { question }\r\n})\r\n\r\nexport const setErrorMessage = msg => ({\r\n  type: SET_ERROR_MESSAGE,\r\n  payload: { msg }\r\n})\r\n\r\nexport const updateRecomText = (text, category, key) => ({\r\n  type: UPDATE_RECOM_TEXT,\r\n  payload: {text, category, key}\r\n})\r\n\r\nexport const updateRecomThreshold = (value, category) => ({\r\n  type: UPDATE_RECOM_THRESHOLD,\r\n  payload: {value, category }\r\n})","import { uuid } from \"uuidv4\"\r\nimport { combineReducers } from \"redux\"\r\nimport {\r\n  UPDATE_NEW_RADIO_OPTION,\r\n  questionActionTypes,\r\n  messageActionTypes,\r\n  scoreThresholdActionTypes,\r\n  newQuestionActionTypes\r\n} from \"./actions\"\r\n\r\n\r\nimport Sample from \"./sample\"\r\n//import SampleSmall from \"./sample_small\"\r\n\r\n// TODO: Move this\r\nexport const findTargetQuestionIndex = (questions, uuid) => questions.findIndex(q => q.uuid === uuid)\r\nexport const findTargetQuestion = (questions, uuid) => questions.find(q => q.uuid === uuid)\r\n\r\n\r\nexport const initialStateQuestions = {\r\n  questions: Sample.map(s => Object.assign({}, s, { uuid: uuid() }))\r\n}\r\n\r\n/* \r\n  TODO: DRY?\r\n  TODO: split reducer? this has become an abmomination\r\n*/\r\n\r\nexport const questionsReducer = (state = initialStateQuestions, action) => {\r\n  let questions, index, targetQuestionIndex, targetQuestion\r\n  const {\r\n    UPDATE_QUESTION,\r\n    REMOVE_QUESTION,\r\n    ADD_QUESTION,\r\n    MOVE_QUESTION,\r\n    CHANGE_QUESTION_ATTRIBUTE\r\n  } = questionActionTypes\r\n\r\n  switch (action.type) {\r\n    case UPDATE_QUESTION:\r\n      questions = [...state.questions]\r\n      targetQuestionIndex = findTargetQuestionIndex(questions, action.payload.question.uuid)\r\n      questions[targetQuestionIndex] = state.editQuestion\r\n\r\n      return {\r\n        ...state,\r\n        questions\r\n      }\r\n\r\n    case REMOVE_QUESTION:\r\n      questions = [...state.questions].filter(q => q.uuid !== action.payload.uuid)\r\n\r\n      return {\r\n        ...state,\r\n        questions\r\n      }\r\n\r\n    case ADD_QUESTION:\r\n      questions = [...state.questions]\r\n\r\n      if (questions.some(q => q.uuid === action.payload.question.uuid)) { // already exists\r\n        return state\r\n      }\r\n\r\n      questions.push(action.payload.question)\r\n      return {\r\n        ...state,\r\n        questions,\r\n        editQuestion: initialStateEditQuestion,\r\n        showNewQuestionModal: false\r\n      }\r\n\r\n    case MOVE_QUESTION:\r\n      // working now and total overkill. refactor this\r\n      let arr = [...state.questions]\r\n      index = arr.findIndex(question => question.uuid === action.payload.uuid)\r\n      let newIndex = index + action.payload.direction\r\n\r\n      if (newIndex < 0 || newIndex >= arr.length) {\r\n        return state\r\n      }\r\n      arr.splice(newIndex, 0, arr.splice(index, 1)[0])\r\n      questions = arr.map(question => Object.assign({}, JSON.parse(JSON.stringify(question))))\r\n\r\n      return {\r\n        ...state,\r\n        questions\r\n      }\r\n\r\n    case CHANGE_QUESTION_ATTRIBUTE:\r\n      questions = [...state.questions]\r\n      targetQuestionIndex = findTargetQuestionIndex(questions, action.payload.uuid)\r\n      targetQuestion = questions[targetQuestionIndex]\r\n      targetQuestion[action.payload.attribute] = action.payload.value\r\n      questions[targetQuestionIndex] = Object.assign({}, targetQuestion)\r\n\r\n      return {\r\n        questions\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateCategories = {\r\n  categories: [\"contact\", \"personalInfo\", \"symptoms\", \"respiratorySymptoms\", \"illnesses\", \"medication\"]\r\n}\r\n\r\nexport const categoriesReducer = (state = initialStateCategories, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateScoreThresholdMap = {\r\n  contact: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  },\r\n  personalInfo: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  },\r\n  symptoms: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  },\r\n  respiratorySymptoms: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  },\r\n  illnesses: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  },\r\n  medication: {\r\n    threshold: 0,\r\n    recoms: {\r\n      isDanger: \"lorem\",\r\n      isSafe: \"ipsum\"\r\n    }\r\n  }\r\n}\r\n\r\nexport const scoreThresholdMapReducer = (state = initialStateScoreThresholdMap, action) => {\r\n  const { UPDATE_RECOM_THRESHOLD, UPDATE_RECOM_TEXT } = scoreThresholdActionTypes\r\n  let scoreThresholdMap\r\n  switch (action.type) {\r\n    case UPDATE_RECOM_THRESHOLD:\r\n\r\n      scoreThresholdMap = Object.assign({}, state)\r\n      scoreThresholdMap[action.payload.category].threshold = action.payload.value\r\n\r\n      return {\r\n        ...scoreThresholdMap\r\n      }\r\n\r\n    case UPDATE_RECOM_TEXT:\r\n      scoreThresholdMap = Object.assign({}, state)\r\n      scoreThresholdMap[action.payload.category].recoms[action.payload.key] = action.payload.text\r\n\r\n      return {\r\n        ...scoreThresholdMap\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateEditQuestion = {\r\n  id: undefined,\r\n  category: undefined,\r\n  text: undefined,\r\n  inputType: undefined,\r\n  uuid: undefined,\r\n  options: undefined,\r\n  nextQuestionMap: undefined,\r\n  scoreMap: undefined\r\n}\r\n\r\nexport const editQuestionReducer = (state = initialStateEditQuestion, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateCategoryBadges = {\r\n  contact: \"danger\",\r\n  personalInfo: \"success\",\r\n  symptoms: \"warning\",\r\n  respiratorySymptoms: \"primary\",\r\n  illnesses: \"dark\",\r\n  medication: \"secondary\"\r\n}\r\n\r\nexport const categoryBadgesReducer = (state = initialStateCategoryBadges, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateNewQuestion = {\r\n  id: \"\",\r\n  text: \"\",\r\n  inputType: \"\",\r\n  category: \"\",\r\n  showNewQuestionModal: false\r\n}\r\n\r\nexport const newQuestionReducer = (state = initialStateNewQuestion, action) => {\r\n  const { TOGGLE_NEWQUESTION_MODAL, CHANGE_NEWQUESTION_ATTRIBUTE } = newQuestionActionTypes\r\n  switch (action.type) {\r\n    case TOGGLE_NEWQUESTION_MODAL:\r\n      return {\r\n        ...state,\r\n        showNewQuestionModal: action.payload.value\r\n      }\r\n    case CHANGE_NEWQUESTION_ATTRIBUTE:\r\n      const attr = Object.assign({}, state.editQuestion, { [action.payload.key]: action.payload.value })\r\n      return {\r\n        ...state,\r\n        ...attr\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateMessages = {\r\n  errorMessage: \"\",\r\n  infoMessage: \"\",\r\n  successMessage: \"\"\r\n}\r\n\r\nexport const messagesReducer = (state = initialStateMessages, action) => {\r\n  switch (action.type) {\r\n    case messageActionTypes.SET_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.msg\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateNewRadioOption = {\r\n  newRadioOption: \"\"\r\n}\r\n\r\nexport const newRadioOptionReducer = (state = initialStateNewRadioOption, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_NEW_RADIO_OPTION:\r\n      return {\r\n        newRadioOption: action.payload.option\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initialStateInputTypes = {\r\n  inputTypes: [\"radio\", \"date\"]\r\n}\r\n\r\nexport const inputTypesReducer = (state = initialStateInputTypes, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  questions: questionsReducer,\r\n  categories: categoriesReducer,\r\n  scoreThresholdMap: scoreThresholdMapReducer,\r\n  editQuestion: editQuestionReducer,\r\n  categoryBadges: categoryBadgesReducer,\r\n  newQuestion: newQuestionReducer,\r\n  messages: messagesReducer,\r\n  newRadioOption: newRadioOptionReducer,\r\n  inputTypes: inputTypesReducer\r\n})","import questionCatalogReducer from './reducers';\r\n\r\nexport default questionCatalogReducer;","import { combineReducers } from \"redux\"\r\nimport creatorReducer from \"./app/creator/duck\"\r\nimport questioncatalogReducer  from \"./app/questioncatalog/duck\"\r\n\r\nexport default combineReducers({\r\n    creator: creatorReducer,\r\n    questioncatalog: questioncatalogReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst loggerMiddleware = createLogger();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(preloadedState) {\r\n    return createStore(\r\n      rootReducer,\r\n      preloadedState,\r\n      composeEnhancers(applyMiddleware(thunkMiddleware, loggerMiddleware)),\r\n    )\r\n}","import React from \"react\"\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\n\r\nexport const defaultProps = {}\r\n\r\nexport const AmazonConnectConfiguratorComponent = props => {\r\n\r\n  const {\r\n    createContactFlow,\r\n    connectConf,\r\n    downloadJSON,\r\n    lambdaKeys,\r\n    language,\r\n    basename,\r\n    handleSetBasename\r\n  } = props\r\n\r\n  return (\r\n\r\n   <ButtonGroup size=\"sm\">\r\n          <FormControl value={basename} onChange={(event)=> handleSetBasename(event.target.value)} />\r\n          <Button onClick={createContactFlow} disabled={basename === \"\"}>create Connect Config</Button>\r\n          <Button disabled={!connectConf} onClick={() => downloadJSON(connectConf, language)}>download Configs</Button>\r\n          <Button disabled={!connectConf} onClick={() => downloadJSON(lambdaKeys, language)}>download keys</Button>\r\n    </ButtonGroup>\r\n  )\r\n}\r\n\r\nAmazonConnectConfiguratorComponent.defaultProps = defaultProps\r\n\r\nexport default AmazonConnectConfiguratorComponent","import PropTypes from \"prop-types\"\r\n\r\nexport const defaultProps = {\r\n  version: \"1\",\r\n  positionX: 20,\r\n  positionY: 50,\r\n  description: \"generated ContactFlow\",\r\n  snapToGrid: true,\r\n}\r\n\r\nexport const propTypes = {\r\n  startUUID: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  version: PropTypes.string,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number,\r\n  description: PropTypes.string,\r\n  snapToGrid: PropTypes.bool\r\n}\r\n\r\n\r\nexport const EmptyContactFlow = ({\r\n  startUUID, name,\r\n  version = defaultProps.version,\r\n  positionX = defaultProps.positionX,\r\n  positionY = defaultProps.positionY,\r\n  description = defaultProps.description,\r\n  snapToGrid = defaultProps.snapToGrid\r\n  }) => {\r\n\r\n  return {\r\n    modules: [],\r\n    version: version,\r\n    type: \"contactFlow\",\r\n    start: startUUID,\r\n    metadata: {\r\n      entryPointPosition: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      snapToGrid: snapToGrid,\r\n      name: name,\r\n      description: description,\r\n      type: \"contactFlow\",\r\n      status: \"saved\"\r\n    }\r\n  }\r\n}\r\n\r\nEmptyContactFlow.propTypes = propTypes\r\nEmptyContactFlow.defaultProps = defaultProps\r\n\r\nexport default EmptyContactFlow\r\n\r\n","import PropTypes from \"prop-types\"\r\n\r\nexport const defaultProps = {\r\n  positionX: 220,\r\n  positionY: 420,\r\n  errorText: \"<speak>Irgendetwas ist schief gelaufen. Es tut uns Leid. Bitte versuchen Sie es später noch einmal.</speak>\",\r\n  useDynamic: false\r\n}\r\n\r\nexport const propTypes = {\r\n  startUUID: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number,\r\n  useDynamic: PropTypes.bool\r\n}\r\n\r\nexport const ContactFlowError = ({\r\n    ownUUID, transitionUUID,\r\n    errorText = defaultProps.errorText,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY,\r\n    useDynamic = defaultProps.useDynamic\r\n  }) => {\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"PlayPrompt\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"Text\",\r\n        value: errorText,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TextToSpeechType\",\r\n        value: \"ssml\"\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      useDynamic: useDynamic\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowError.propTypes = propTypes\r\nContactFlowError.defaultProps = defaultProps\r\n\r\nexport default ContactFlowError","import PropTypes from \"prop-types\"\r\n\r\nexport const defaultProps = {\r\n  positionX: 20,\r\n  positionY: 220\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number\r\n}\r\n\r\nexport const ContactFlowEnd = ({\r\n    ownUUID,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY\r\n  }) => {\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"Disconnect\",\r\n    branches: [],\r\n    parameters: [],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowEnd.propTypes = propTypes\r\nContactFlowEnd.defaultProps = defaultProps\r\n\r\nexport default ContactFlowEnd","import PropTypes from \"prop-types\"\r\n\r\n\r\n// TODO: find better name for endPoint, maybe even split it in parts\r\nexport const defaultProps = {\r\n  positionX: 20,\r\n  positionY: 600,\r\n  endPoint: \"\"\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  resourceName: PropTypes.string.isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number,\r\n  endPoint: PropTypes.string,\r\n  useDynamic: PropTypes.bool\r\n}\r\n\r\nexport const ContactFlowTransfer = ({\r\n    ownUUID, errorUUID, resourceName,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY,\r\n    endPoint = defaultProps.endPoint,\r\n    useDynamic = defaultProps.useDynamic\r\n  }) => {\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"Transfer\",\r\n    branches: [\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"ContactFlowId\",\r\n        value: endPoint,\r\n        resourceName: resourceName\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      useDynamic: useDynamic,\r\n      ContactFlow: {\r\n        id: endPoint,\r\n        text: resourceName\r\n      }\r\n    },\r\n    target: \"Flow\"\r\n  }\r\n}\r\n\r\nContactFlowTransfer.propTypes = propTypes\r\nContactFlowTransfer.defaultProps = defaultProps\r\n\r\nexport default ContactFlowTransfer","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  positionX: 220,\r\n  positionY: 20\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n}\r\n\r\nexport const ContactFlowLogging = ({\r\n    ownUUID, transitionUUID, errorUUID,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY\r\n  }) => {\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"SetLoggingBehavior\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"LoggingBehavior\",\r\n        value: \"Enable\"\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowLogging.propTypes = propTypes\r\nContactFlowLogging.defaultProps = defaultProps\r\n\r\nexport default ContactFlowLogging","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  voiceType: \"Vicki\",\r\n  positionX: 420,\r\n  positionY: 20\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  voiceType: PropTypes.string,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number\r\n}\r\n\r\nexport const ContactFlowVoice = ({\r\n    ownUUID, transitionUUID, errorUUID,\r\n    voiceType = defaultProps.voiceType,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY\r\n  }) => {\r\n\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"SetVoice\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"GlobalVoice\",\r\n        value: voiceType\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowVoice.propTypes = propTypes\r\nContactFlowVoice.defaultProps = defaultProps\r\n\r\nexport default ContactFlowVoice","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  positionX: 620,\r\n  positionY: 20,\r\n  useDynamic: false,\r\n  textToSpechType: \"ssml\"\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  positionX: PropTypes.string,\r\n  positionY: PropTypes.string,\r\n  useDynamic: PropTypes.bool\r\n}\r\n\r\nexport const ContactFlowPlayPrompt = ({\r\n    ownUUID, transitionUUID, errorUUID, text,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY,\r\n    useDynamic = defaultProps.useDynamic,\r\n    textToSpechType = defaultProps.textToSpechType\r\n  }) => {\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"PlayPrompt\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"Text\",\r\n        value: text,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TextToSpeechType\",\r\n        value: textToSpechType\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      useDynamic: useDynamic\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowPlayPrompt.propTypes = propTypes\r\nContactFlowPlayPrompt.defaultProps = defaultProps\r\n\r\nexport default ContactFlowPlayPrompt","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  text: \"<speak>Die Frage wird nun wiederholt.</speak>\",\r\n  useDynamic: false\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  positionX: PropTypes.number.isRequired,\r\n  positionY: PropTypes.number.isRequired,\r\n  text: PropTypes.string,\r\n  useDynamic: PropTypes.bool\r\n}\r\n\r\nexport const ContactFlowRepeat = ({\r\n    ownUUID, transitionUUID, positionX, positionY,\r\n    text = defaultProps.text,\r\n    useDynamic = defaultProps.useDynamic\r\n  }) => {\r\n  return {\r\n    id: ownUUID,\r\n    type: \"PlayPrompt\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"Text\",\r\n        value: text,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TextToSpeechType\",\r\n        value: \"ssml\"\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      useDynamic: useDynamic\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowRepeat.propTypes = propTypes\r\nContactFlowRepeat.defaultProps = defaultProps\r\n\r\nexport default ContactFlowRepeat","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  namespace: null\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  key: PropTypes.string.isRequired,\r\n  positionX: PropTypes.number.isRequired,\r\n  positionY: PropTypes.number.isRequired\r\n}\r\n\r\n\r\nexport const ContactFlowAttribute = ({\r\n    ownUUID, errorUUID, transitionUUID, value, key, positionX, positionY,\r\n    namespace = defaultProps.namespace\r\n  }) => {  \r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"SetAttributes\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"Attribute\",\r\n        value: value,\r\n        key: key,\r\n        namespace: namespace\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nContactFlowAttribute.propTypes = propTypes\r\nContactFlowAttribute.defaultProps = defaultProps\r\n\r\nexport default ContactFlowAttribute","import PropTypes from \"prop-types\"\r\n\r\n\r\nexport const defaultProps = {\r\n  positionX: 337,\r\n  positionY: 35,\r\n  endPoint: \"arn:aws:lambda:eu-west-2:260148551992:function:determineWordsForCovApp\"\r\n}\r\n\r\nexport const propTypes = {\r\n  ownUUID: PropTypes.string.isRequired,\r\n  transitionUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  lambdaKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number,\r\n  endPoint: PropTypes.string\r\n}\r\n\r\nexport const ContactFlowInvokeExternal = ({\r\n    ownUUID, transitionUUID, errorUUID, lambdaKeys,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY,\r\n    endPoint = defaultProps.endPoint\r\n  }) => {\r\n\r\n  let dynamicParameters = []\r\n  let dynamicMetadata = {}\r\n\r\n  console.log({lambdaKeys})\r\n\r\n  lambdaKeys.forEach((key, i) => {\r\n    let dynamicParamter = {\r\n      name: \"Parameter\",\r\n      key: key,\r\n      value: `$.Attributes.${key}`,\r\n      namespace: null\r\n    }\r\n    //let dynamicMetadata = {[key]: false} woopsie\r\n    dynamicParameters.push(dynamicParamter)\r\n    dynamicMetadata[key] = false\r\n  })\r\n\r\n  console.log({dynamicMetadata})\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"InvokeExternalResource\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: transitionUUID\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"FunctionArn\",\r\n        value: endPoint,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TimeLimit\",\r\n        value: \"8\"\r\n      },\r\n      ...dynamicParameters\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      dynamicMetadata: dynamicMetadata,\r\n      useDynamic: false\r\n    },\r\n    target: \"Lambda\"\r\n  }\r\n}\r\n\r\nContactFlowInvokeExternal.propTypes = propTypes\r\nContactFlowInvokeExternal.defaultProps = defaultProps\r\n\r\nexport default ContactFlowInvokeExternal","import PropTypes from \"prop-types\"\r\nimport { uuid } from \"uuidv4\"\r\nimport { ContactFlowAttribute } from \"./contactflowattribute\"\r\n\r\nexport const defaultProps = {\r\n  useDynamic: false,\r\n  maxDigits: \"1\"\r\n}\r\n\r\nexport const generateTextFromOptions = (question, language) => {\r\n  let text = `${question.text} <break time=\"1s\" />`\r\n\r\n  // quick n dirty. these stuff needs to be moved to state.\r\n  let part1 = language === 'de' ? 'Drücken Sie die' : 'Press'\r\n  let part2 = language === 'de' ? 'für' : 'for'\r\n\r\n  question.options.forEach((option, i) => {\r\n    //text = text.concat(`Drücken Sie die ${i} für ${option} <break time=\"1s\" />`)\r\n    text = text.concat(`${part1} ${i+1} ${part2} ${option} <break time=\"1s\" />`)\r\n  })\r\n  return `<speak>${text}</speak>`\r\n}\r\n\r\nexport const propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  ownUUID: PropTypes.string.isRequired,\r\n  repeatUUID: PropTypes.string.isRequired,\r\n  errorUUID: PropTypes.string.isRequired,\r\n  transitionUUIDs: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  optionsUUIDMap: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  modules: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  positionX: PropTypes.number.isRequired,\r\n  positionY: PropTypes.number.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n  addKey: PropTypes.func.isRequired,\r\n  useDynamic: PropTypes.bool,\r\n  maxDigits: PropTypes.string\r\n}\r\n\r\nexport const ContactFlowUserInput = ({\r\n  question,\r\n  ownUUID,\r\n  repeatUUID,\r\n  errorUUID,\r\n  transitionUUIDs,\r\n  optionsUUIDMap,\r\n  modules,\r\n  positionX,\r\n  positionY,\r\n  dispatch,\r\n  addKey,\r\n  language,\r\n  useDynamic = defaultProps.useDynamic,\r\n  maxDigits = defaultProps.maxDigits\r\n}) => {\r\n\r\n  const conditionMetadata = []\r\n\r\n  let staticBranches = [\r\n    {\r\n      condition: \"Timeout\",\r\n      transition: repeatUUID\r\n    },\r\n    {\r\n      condition: \"NoMatch\",\r\n      transition: repeatUUID\r\n    },\r\n    {\r\n      condition: \"Error\",\r\n      transition: errorUUID\r\n    }\r\n  ]\r\n\r\n  /*  each dynamic branch needs a SetAttributes */\r\n  const dynamicBranches = question.options.map((option, i) => {\r\n    let conditionMetadataUUID = uuid()\r\n    let val = i + 1\r\n    const conditionMetadataObj = {\r\n      id: conditionMetadataUUID,\r\n      value: val.toString()\r\n    }\r\n    conditionMetadata.push(conditionMetadataObj)\r\n\r\n    let key = `${question.category}_${question.id}`\r\n    dispatch(addKey(key))\r\n\r\n\r\n    let contactFlowAttribute = ContactFlowAttribute({\r\n      ownUUID: optionsUUIDMap[i],\r\n      errorUUID: errorUUID,\r\n      key: key,\r\n      value: val,\r\n      positionX: positionX + 250,\r\n      positionY: positionY + i * 200,\r\n      transitionUUID: transitionUUIDs[i].uuid,\r\n      score: question.hasOwnProperty(\"scoreMap\") ? question.scoreMap[i] : undefined\r\n    })\r\n    modules.push(contactFlowAttribute)\r\n\r\n    return {\r\n      condition: \"Evaluate\",\r\n      conditionType: \"Equals\",\r\n      conditionValue: val.toString(),\r\n      transition: optionsUUIDMap[i]\r\n    }\r\n  })\r\n\r\n  const branches = [...dynamicBranches, ...staticBranches]\r\n\r\n  let useFullText = question.hasOwnProperty(\"options\") ? generateTextFromOptions(question, language) : `<speak>${question.text}</speak>`\r\n\r\n  return {\r\n    id: ownUUID,\r\n    type: \"GetUserInput\",\r\n    branches: branches,\r\n    parameters: [\r\n      {\r\n        name: \"Text\",\r\n        value: useFullText,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TextToSpeechType\",\r\n        value: \"ssml\"\r\n      },\r\n      {\r\n        name: \"Timeout\",\r\n        value: \"5\"\r\n      },\r\n      {\r\n        name: \"MaxDigits\",\r\n        value: maxDigits\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      conditionMetadata: conditionMetadata,\r\n      useDynamic: useDynamic\r\n    },\r\n    target: \"Digits\"\r\n  }\r\n}\r\n\r\nContactFlowUserInput.propTypes = propTypes\r\nContactFlowUserInput.defaultProps = defaultProps\r\n\r\nexport default ContactFlowUserInput","export const greetingText = {\r\n  de: `Deutsche Begrüßung`,\r\n  en: `<speak>Welcome to our service. Within a few minutes you will answer a questionnaire and receive specific recommendations for action.\r\n  At the end you will be given two words to write down. By mentioning these two words, practices and clinics can ask for their individual summary of the answers. You are free to decide to whom you entrust these two words.\r\n  Please note that the use of this service does not replace medical treatment or provide a diagnostic service.\r\n  Let us now begin with the questions.</speak>`\r\n}\r\n\r\nexport const repeatText = {\r\n  de: `<speak>Die Frage wird nun wiederholt.</spea>`,\r\n  en: `<speak>The question is now repeated.</speak>`\r\n}\r\n\r\nexport const errorText = {\r\n  de: `<speak>Irgendetwas ist schief gelaufen. Es tut uns Leid. Bitte versuchen Sie es später noch einmal.</speak>`,\r\n  en: `<speak>Something went wrong. We are sorry. Please try again later.</speak>`\r\n}\r\n\r\nexport const defaultVoice = {\r\n  de: \"Vicki\",\r\n  en: \"Joey\"\r\n}\r\n\r\nexport const defaultText = {\r\n  greetingText,\r\n  repeatText,\r\n  errorText,\r\n  defaultVoice\r\n}","import { uuid } from \"uuidv4\"\r\nimport PropTypes from \"prop-types\"\r\nimport { EmptyContactFlow } from \"./emptycontactflow\"\r\nimport { ContactFlowError } from \"./contactflowerror\"\r\nimport { ContactFlowEnd } from \"./contactflowend\"\r\nimport { ContactFlowTransfer } from \"./contactflowtransfer\"\r\nimport { ContactFlowLogging } from \"./contactflowlogging\"\r\nimport { ContactFlowVoice } from \"./contactflowvoice\"\r\nimport { ContactFlowPlayPrompt } from \"./contactflowplayprompt\"\r\nimport { defaultText } from \"../questions/defaultText\"\r\nimport { ContactFlowAttribute } from \"./contactflowattribute\"\r\n\r\nexport const defaultProps = {\r\n  name: \"automated_charite_data_start\",\r\n  text: \"miau\"\r\n}\r\n\r\nexport const propTypes = {\r\n  name: PropTypes.string,\r\n  text: PropTypes.string\r\n}\r\n\r\n\r\nexport const ContactFlowStaticStart = ({\r\n    language,\r\n    firstQuestionName,\r\n    scoreMap,\r\n    name = defaultProps.name,\r\n    text = defaultProps.text\r\n  }) => {\r\n    const loggingUUUID = uuid()\r\n    const startErrorUUID = uuid()\r\n    const startEndUUID = uuid()\r\n    const startTransferUUID = uuid()\r\n    const voiceUUID = uuid()\r\n    const scoreMapUUID = uuid()\r\n    const greetingUUID = uuid()\r\n\r\n    const staticStart = EmptyContactFlow({\r\n      startUUID: loggingUUUID,\r\n      name: name,\r\n      description: \"start\"\r\n    })\r\n    const startModules = []\r\n\r\n    const startError = ContactFlowError({\r\n      ownUUID: startErrorUUID,\r\n      transitionUUID: startEndUUID,\r\n      errorText: defaultText.errorText[language]\r\n    })\r\n    startModules.push(startError)\r\n\r\n    const startEnd = ContactFlowEnd({\r\n      ownUUID: startEndUUID\r\n    })\r\n    startModules.push(startEnd)\r\n\r\n    const startTransfer = ContactFlowTransfer({\r\n      ownUUID: startTransferUUID,\r\n      transitionUUID: voiceUUID,\r\n      errorUUID: startErrorUUID,\r\n      resourceName: firstQuestionName\r\n    })\r\n    startModules.push(startTransfer)\r\n\r\n    const startLogging = ContactFlowLogging({\r\n      ownUUID: loggingUUUID,\r\n      transitionUUID: voiceUUID,\r\n      errorUUID: startErrorUUID\r\n    })\r\n    startModules.push(startLogging)\r\n\r\n    const startVoice = ContactFlowVoice({\r\n      ownUUID: voiceUUID,\r\n      transitionUUID: scoreMapUUID,\r\n      errorUUID: startErrorUUID,\r\n      voiceType: defaultText.defaultVoice[language]\r\n    })\r\n    startModules.push(startVoice)\r\n\r\n    let scoreMapAttribute = ContactFlowAttribute({\r\n      ownUUID: scoreMapUUID,\r\n      errorUUID: startErrorUUID,\r\n      key: \"scoreMap\",\r\n      value: JSON.stringify(scoreMap),\r\n      positionX: 250,\r\n      positionY: 200,\r\n      transitionUUID: greetingUUID\r\n      //score: question.hasOwnProperty(\"scoreMap\") ? question.scoreMap[i] : undefined\r\n    })\r\n    startModules.push(scoreMapAttribute)\r\n\r\n    const startGreeting = ContactFlowPlayPrompt({\r\n      ownUUID: greetingUUID,\r\n      transitionUUID: startTransferUUID,\r\n      errorUUID: startErrorUUID,\r\n      text: text\r\n    })\r\n    startModules.push(startGreeting)\r\n\r\n    staticStart.modules = startModules\r\n\r\n    return staticStart\r\n}\r\n\r\nContactFlowStaticStart.propTypes = propTypes\r\nContactFlowStaticStart.defaultProps = defaultProps\r\n\r\nexport default ContactFlowStaticStart","import PropTypes from \"prop-types\"\r\nimport { uuid } from \"uuidv4\"\r\nimport { EmptyContactFlow } from \"./emptycontactflow\"\r\nimport { ContactFlowError } from \"./contactflowerror\"\r\nimport { ContactFlowEnd } from \"./contactflowend\"\r\nimport { ContactFlowInvokeExternal } from \"./contactflowinvokeexternal\"\r\nimport { ContactFlowPlayPrompt } from \"./contactflowplayprompt\"\r\nimport { defaultText } from \"../questions/defaultText\"\r\n\r\nexport const defaultProps = {\r\n  name: \"generated_charite_data_29\"\r\n}\r\n\r\nexport const propTypes = {\r\n  getState: PropTypes.func.isRequired,\r\n  name: PropTypes.string\r\n}\r\n\r\n// TODO: dynamicMetadata {<key>: false}\r\nexport const ContactFlowStaticEnd = ({\r\n    getState, language,\r\n    name = defaultProps.name\r\n  }) => {\r\n\r\n    const finishUUID = uuid()\r\n    const endErrorUUID = uuid()\r\n    const lambdaUUID = uuid()\r\n    const recomSpeechUUID = uuid()\r\n\r\n    const staticEnd = EmptyContactFlow({\r\n      startUUID: lambdaUUID,\r\n      name: name,\r\n      description: \"end\"\r\n    })\r\n    const endModules = []\r\n\r\n    const endError = ContactFlowError({\r\n      ownUUID: endErrorUUID,\r\n      transitionUUID: finishUUID,\r\n      errorText: defaultText.errorText[language]\r\n    })\r\n    endModules.push(endError)\r\n\r\n    const finishLine = ContactFlowEnd({ownUUID: finishUUID})\r\n    endModules.push(finishLine)\r\n\r\n    const finalState = getState()\r\n    const lambdaKeys = finalState.creator.lambdaKeys.lambdaKeys\r\n\r\n    const lambdaCall = ContactFlowInvokeExternal({\r\n      ownUUID: lambdaUUID,\r\n      errorUUID: endErrorUUID,\r\n      lambdaKeys: lambdaKeys,\r\n      transitionUUID: recomSpeechUUID\r\n    })\r\n    endModules.push(lambdaCall)\r\n\r\n    const recomVoice = ContactFlowPlayPrompt({\r\n      ownUUID: recomSpeechUUID,\r\n      transitionUUID: finishUUID,\r\n      errorUUID: endErrorUUID,\r\n      textToSpechType: \"text\",\r\n      text: \"$.External.word1 und $.External.word2\"\r\n    })\r\n    endModules.push(recomVoice)\r\n\r\n    staticEnd.modules = endModules\r\n\r\n    return staticEnd\r\n}\r\n\r\nContactFlowStaticEnd.propTypes = propTypes\r\nContactFlowStaticEnd.defaultProps = defaultProps\r\n\r\nexport default ContactFlowStaticEnd","import PropTypes from \"prop-types\"\r\nimport { uuid } from \"uuidv4\"\r\nimport { EmptyContactFlow } from \"./emptycontactflow\"\r\nimport { ContactFlowEnd } from \"./contactflowend\"\r\nimport { ContactFlowRepeat } from \"./contactflowrepeat\"\r\nimport { ContactFlowError } from \"./contactflowerror\"\r\nimport { ContactFlowTransfer } from \"./contactflowtransfer\"\r\nimport { ContactFlowUserInput } from \"./contactflowuserinput\"\r\n\r\nexport const defaultProps = {\r\n  positionX: 820,\r\n  positionY: 20,\r\n  offsetX: 0,\r\n  offsetY: 200\r\n}\r\n\r\nexport const propTypes = {\r\n  dispatch: PropTypes.func.isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number\r\n}\r\n\r\nexport const ContactFlowQuestion = ({\r\n    language, errorText, repeatText, index, getState,\r\n    dispatch, uuidMap, xxxMap, question, addKey, name, basename,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY,\r\n    offsetX = defaultProps.offsetX,\r\n    offsetY = defaultProps.offsetY\r\n  }) => {\r\n\r\n      //console.log(`hello question ${question.id} has index ${index}`)\r\n      \r\n      // REMOVE THIS! REFACTOR\r\n      /* if(question.hasOwnProperty(\"scoreMap\")) {\r\n        console.log(\"YOOOOOOOOOOO\", question.scoreMap)\r\n      } */\r\n\r\n\r\n      const endUUID = uuid()\r\n      const repeatUUID = uuid()\r\n      const errorUUID = uuid()\r\n\r\n      let transferUUIDs \r\n      if (question.nextQuestionMap !== undefined) {\r\n        let someUUIDs = Array.from(new Set(question.nextQuestionMap.map(q => {\r\n          return {uuid: uuid(), key: q}\r\n        })))\r\n        transferUUIDs = question.nextQuestionMap.map(q => {\r\n          return someUUIDs.find(u => u.key === q)\r\n        })\r\n      }\r\n      else {\r\n        let singleTransferUUID = {uuid: uuid(), key: question.id}\r\n        transferUUIDs = question.options.map(q => singleTransferUUID)\r\n      }\r\n\r\n      const contactFlowQuestion = EmptyContactFlow({\r\n        name: name,\r\n        startUUID: uuidMap[question.id],\r\n        description: question.id\r\n      })\r\n      const modules = []\r\n\r\n      const contactFlowEnd = ContactFlowEnd({ownUUID:endUUID})\r\n      modules.push(contactFlowEnd)\r\n\r\n      const contactFlowRepeat = ContactFlowRepeat({\r\n        ownUUID: repeatUUID,\r\n        transitionUUID: uuidMap[question.id],\r\n        positionX: positionX + offsetX,\r\n        positionY: positionY + offsetY,\r\n        text: repeatText\r\n      })\r\n      modules.push(contactFlowRepeat)\r\n\r\n      const contactFlowError = ContactFlowError({\r\n        ownUUID: errorUUID,\r\n        transitionUUID: endUUID,\r\n        errorText: errorText\r\n      })\r\n      modules.push(contactFlowError)\r\n\r\n      const uniqueTransferUUIDs = Array.from(new Set(transferUUIDs))\r\n\r\n      uniqueTransferUUIDs.forEach(t => {\r\n\r\n        let current = xxxMap.find(u => u.key === t.key)\r\n        let currentIndex = xxxMap.indexOf(current)\r\n        let nextIndex = currentIndex + 1\r\n        // TODO: clean up this mess....\r\n        let fooName\r\n        if(question.id === xxxMap.slice(-1)[0].key) {\r\n          fooName = \"end\"\r\n        } else {\r\n          // uniqueTransferUUIDs only 1 element? use xxxMap[next] else t.key\r\n          fooName =  uniqueTransferUUIDs.length === 1 ? xxxMap[nextIndex].key : t.key\r\n        }\r\n  \r\n        \r\n\r\n        let resourceName\r\n        if (fooName !== \"end\") {\r\n          let nextQuestion = xxxMap.find(x => x.key === fooName)\r\n          fooName = xxxMap.indexOf(nextQuestion)\r\n          resourceName = `${basename}_${fooName}`//`generated_charite_data_${fooName}`\r\n        } else {\r\n          // remove this. its a workaround for 100 max contactflows @ amazon connect\r\n          resourceName = `${basename}_end`//\"generated_charite_data_end\"\r\n        }\r\n        console.log(`${question.id} leads to question number ${fooName}`)\r\n        const contactFlowTransfer = ContactFlowTransfer({\r\n          ownUUID: t.uuid,\r\n          errorUUID: errorUUID,\r\n          resourceName: resourceName//`generated_charite_data_${fooName}`//`question_${fooName}_${language}`\r\n        })\r\n        modules.push(contactFlowTransfer)\r\n      })\r\n\r\n      let optionsUUIDMap = {}\r\n\r\n      question.options.forEach((option,i) => {\r\n        optionsUUIDMap[i] = uuid()\r\n      })\r\n\r\n\r\n      const contactFlowUserInput = ContactFlowUserInput({\r\n        question: question,\r\n        ownUUID: uuidMap[question.id],\r\n        repeatUUID: repeatUUID,\r\n        errorUUID: errorUUID,\r\n        transitionUUIDs: transferUUIDs,\r\n        optionsUUIDMap: optionsUUIDMap,\r\n        modules: modules,\r\n        positionX: positionX,\r\n        positionY: positionY,\r\n        dispatch: dispatch,\r\n        addKey: addKey,\r\n        language: language,\r\n        maxDigits: question.inputType === \"radio\" ? \"1\" : \"3\",\r\n      })\r\n      modules.push(contactFlowUserInput)\r\n\r\n      contactFlowQuestion.modules = modules\r\n\r\n    return contactFlowQuestion\r\n}","//import PropTypes from \"prop-types\"\r\nimport { uuid } from \"uuidv4\"\r\nimport { ContactFlowAttribute } from \"./contactflowattribute\"\r\n\r\nexport const defaultProps = {\r\n  positionX: 800,\r\n  positionY: 800,\r\n  maxDigits: 3\r\n}\r\n\r\nexport const propTypes = {\r\n}\r\n\r\nexport const generateTextFromOptions = question => {\r\n  let text = `${question.text} <break time=\"1s\" />`\r\n  return `<speak>${text}</speak>`\r\n}\r\n\r\n\r\nexport const ContactFlowStore = ({\r\n  question,\r\n  ownUUID,\r\n  errorUUID,\r\n  transitionUUIDs,\r\n  modules,\r\n  positionX,\r\n  positionY,\r\n  dispatch,\r\n  addKey,\r\n  //useDynamic = defaultProps.useDynamic,\r\n  maxDigits = defaultProps.maxDigits\r\n}) => {\r\n  let key = `${question.category}_${question.id}`\r\n  dispatch(addKey(key))\r\n\r\n  const blyatUUID = uuid()\r\n\r\n  let contactFlowAttribute = ContactFlowAttribute({\r\n    ownUUID: blyatUUID,\r\n    errorUUID: errorUUID,\r\n    key: key,\r\n    value: \"Stored customer input\",\r\n    positionX: positionX + 250,\r\n    positionY: positionY + 0 * 200,\r\n    transitionUUID: transitionUUIDs[0].uuid,\r\n    namespace: \"System\"\r\n  })\r\n  modules.push(contactFlowAttribute)\r\n  let useFullText = generateTextFromOptions(question)\r\n\r\n  const wtf = {\r\n    id: ownUUID,\r\n    type: \"StoreUserInput\",\r\n    branches: [\r\n      {\r\n        condition: \"Success\",\r\n        transition: blyatUUID//transitionUUIDs[0].uuid\r\n      },\r\n      {\r\n        condition: \"Error\",\r\n        transition: errorUUID\r\n      }\r\n    ],\r\n    parameters: [\r\n      {\r\n        name: \"Text\",\r\n        value: useFullText,\r\n        namespace: null\r\n      },\r\n      {\r\n        name: \"TextToSpeechType\",\r\n        value: \"ssml\"\r\n      },\r\n      {\r\n        name: \"CustomerInputType\",\r\n        value: \"Custom\"\r\n      },\r\n      {\r\n        name: \"Timeout\",\r\n        value: \"5\"\r\n      },\r\n      {\r\n        name: \"MaxDigits\",\r\n        value: maxDigits\r\n      },\r\n      {\r\n        name: \"EncryptEntry\",\r\n        value: false\r\n      },\r\n      {\r\n        name: \"DisableCancel\",\r\n        value: false\r\n      }\r\n    ],\r\n    metadata: {\r\n      position: {\r\n        x: positionX,\r\n        y: positionY\r\n      },\r\n      useDynamic: false,\r\n      useDynamicForEncryptionKeys: true,\r\n      useDynamicForTerminatorDigits: false,\r\n      countryCodePrefix: \"+1\"\r\n    }\r\n  }\r\n  return wtf\r\n}\r\n\r\nContactFlowStore.propTypes = propTypes\r\nContactFlowStore.defaultProps = defaultProps\r\n\r\nexport default ContactFlowStore","import PropTypes from \"prop-types\"\r\nimport { uuid } from \"uuidv4\"\r\nimport { EmptyContactFlow } from \"./emptycontactflow\"\r\nimport { ContactFlowEnd } from \"./contactflowend\"\r\nimport { ContactFlowRepeat } from \"./contactflowrepeat\"\r\nimport { ContactFlowError } from \"./contactflowerror\"\r\nimport { ContactFlowTransfer } from \"./contactflowtransfer\"\r\nimport { ContactFlowStore } from \"./contactflowstore\"\r\n\r\nexport const defaultProps = {\r\n  positionX: 820,\r\n  positionY: 20\r\n}\r\n\r\nexport const propTypes = {\r\n  dispatch: PropTypes.func.isRequired,\r\n  positionX: PropTypes.number,\r\n  positionY: PropTypes.number\r\n}\r\n\r\nexport const ContactFlowQuestionDate = ({\r\n    language, errorText, repeatText, index,\r\n    dispatch, uuidMap, xxxMap, question, addKey, name, basename,\r\n    positionX = defaultProps.positionX,\r\n    positionY = defaultProps.positionY\r\n  }) => {\r\n\r\n      console.log(`hello question ${question.id} has index ${index}`, name)\r\n      const endUUID = uuid()\r\n      const repeatUUID = uuid()\r\n      const errorUUID = uuid()\r\n\r\n      const transferUUIDs = [{uuid: uuid(), key: question.id}]\r\n\r\n      const contactFlowQuestion = EmptyContactFlow({\r\n        name: name,\r\n        startUUID: uuidMap[question.id],\r\n        errorText: errorText,\r\n        description: question.id\r\n      })\r\n      const modules = []\r\n\r\n      const contactFlowEnd = ContactFlowEnd({ownUUID:endUUID})\r\n      modules.push(contactFlowEnd)\r\n\r\n      const contactFlowRepeat = ContactFlowRepeat({\r\n        ownUUID: repeatUUID,\r\n        transitionUUID: uuidMap[question.id],\r\n        positionX: positionX,\r\n        positionY: positionY + 200,\r\n        text: repeatText\r\n      })\r\n      modules.push(contactFlowRepeat)\r\n\r\n      const contactFlowError = ContactFlowError({\r\n        ownUUID: errorUUID,\r\n        transitionUUID: endUUID\r\n      })\r\n      modules.push(contactFlowError)\r\n\r\n      const uniqueTransferUUIDs = Array.from(new Set(transferUUIDs))\r\n\r\n      uniqueTransferUUIDs.forEach(t => {\r\n\r\n        let current = xxxMap.find(u => u.key === t.key)\r\n        let currentIndex = xxxMap.indexOf(current)\r\n        let nextIndex = currentIndex + 1\r\n        // TODO: clean up this mess....\r\n        let fooName\r\n        if(question.id === xxxMap.slice(-1)[0].key) {\r\n          fooName = \"end\"\r\n        } else {\r\n          // uniqTransferUUIDs only 1 element? use xxxMap[next] else t.key\r\n          fooName =  uniqueTransferUUIDs.length === 1 ? xxxMap[nextIndex].key : t.key\r\n        } \r\n        \r\n        let resourceName\r\n        if (fooName !== \"end\") {\r\n          let nextQuestion = xxxMap.find(x => x.key === fooName)\r\n          fooName = xxxMap.indexOf(nextQuestion)\r\n          resourceName = `${basename}_${fooName}`//`generated_charite_data_${fooName}`\r\n        }  else {\r\n          // remove this. its a workaround for 100 max contactflows @ amazon connect\r\n          resourceName = `${basename}_end`//\"generated_charite_data_end\"\r\n        }\r\n        console.log(`${question.id} leads to question number ${fooName}`)\r\n\r\n        const contactFlowTransfer = ContactFlowTransfer({\r\n          ownUUID: t.uuid,\r\n          errorUUID: errorUUID,\r\n          resourceName: resourceName//`question_${fooName}_${language}`\r\n        })\r\n        modules.push(contactFlowTransfer)\r\n      })\r\n\r\n      const contactFlowStore = ContactFlowStore({\r\n        question: question,\r\n        ownUUID: uuidMap[question.id],\r\n        errorUUID: errorUUID,\r\n        transitionUUIDs: transferUUIDs,\r\n        modules: modules,\r\n        positionX: positionX,\r\n        positionY: positionY,\r\n        dispatch: dispatch,\r\n        addKey: addKey\r\n        //maxDigits: question.inputType === \"radio\" ? \"1\" : \"3\"\r\n      })\r\n      modules.push(contactFlowStore)\r\n\r\n      contactFlowQuestion.modules = modules\r\n\r\n    return contactFlowQuestion\r\n}","import { EmptyContactFlow } from \"./emptycontactflow\"\r\nimport { ContactFlowError } from \"./contactflowerror\"\r\nimport { ContactFlowEnd } from \"./contactflowend\"\r\nimport { ContactFlowTransfer } from \"./contactflowtransfer\"\r\nimport { ContactFlowLogging } from \"./contactflowlogging\"\r\nimport { ContactFlowVoice } from \"./contactflowvoice\"\r\nimport { ContactFlowPlayPrompt} from \"./contactflowplayprompt\"\r\nimport { ContactFlowRepeat } from \"./contactflowrepeat\"\r\nimport { ContactFlowAttribute } from \"./contactflowattribute\"\r\nimport { ContactFlowInvokeExternal } from \"./contactflowinvokeexternal\"\r\nimport { ContactFlowUserInput } from \"./contactflowuserinput\"\r\nimport { ContactFlowStaticStart } from \"./contactflowstaticstart\"\r\nimport { ContactFlowStaticEnd } from \"./contactflowstaticend\"\r\nimport { ContactFlowQuestion } from \"./contactflowquestion\"\r\nimport { ContactFlowQuestionDate } from \"./contactflowquestiondate\"\r\nimport { ContactFlowStore } from \"./contactflowstore\"\r\n\r\nexport const ContactFlow = {\r\n  EmptyContactFlow,\r\n  ContactFlowError,\r\n  ContactFlowEnd,\r\n  ContactFlowTransfer,\r\n  ContactFlowLogging,\r\n  ContactFlowVoice,\r\n  ContactFlowPlayPrompt,\r\n  ContactFlowRepeat,\r\n  ContactFlowAttribute,\r\n  ContactFlowInvokeExternal,\r\n  ContactFlowUserInput,\r\n  ContactFlowStaticStart,\r\n  ContactFlowStaticEnd,\r\n  ContactFlowQuestion,\r\n  ContactFlowQuestionDate,\r\n  ContactFlowStore\r\n}\r\n\r\nexport default ContactFlow\r\n","//import { Guard, Condition, Disjunction } from './guard';\r\n\r\n/* export type Question = {\r\n  id: string;\r\n  category: string;\r\n  comment?: string;\r\n  text: string;\r\n  inputType: 'radio' | 'date';\r\n  options?: string[];\r\n  nextQuestionMap?: string | string[];\r\n  scoreMap?: number[];\r\n  guard?: Guard;\r\n}; */\r\n\r\nexport const CATEGORIES = {\r\n  PERSONAL: 'personalInfo',\r\n  CONTACT: 'contact',\r\n  SYMPTOMS: 'symptoms',\r\n  RESPIRATORY_SYMPTOMS: 'respiratorySymptoms',\r\n  ILLNESS: 'illnesses',\r\n  MEDICATION: 'medication',\r\n};\r\n\r\nexport const QUESTION = {\r\n  AGE: 'P0',\r\n  ABOVE_65: 'P1',\r\n  LIVING_SITUATION: 'P2',\r\n  CARING: 'P3',\r\n  WORKSPACE: 'P4',\r\n  CONTACT_DATE: 'CZ',\r\n  OUT_OF_BREATH: 'SB',\r\n  SYMPTOM_DATE: 'SZ',\r\n};\r\n\r\nexport const QUESTIONNAIRE_ORDER = [\r\n  {\r\n    id: QUESTION.AGE,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P0_text',\r\n    inputType: 'radio',\r\n    options: [\r\n      'q_P0_option0',\r\n      'q_P0_option1',\r\n      'q_P0_option2',\r\n      'q_P0_option3',\r\n      'q_P0_option4',\r\n      'q_P0_option5',\r\n    ],\r\n    nextQuestionMap: ['P2', 'P2', 'P2', 'P1', 'P2', 'P2'],\r\n  },\r\n  {\r\n    id: QUESTION.ABOVE_65,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P1_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n  },\r\n  {\r\n    id: QUESTION.LIVING_SITUATION,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P2_text',\r\n    inputType: 'radio',\r\n    options: ['q_P2_option0', 'q_P2_option1'],\r\n  },\r\n  {\r\n    id: QUESTION.CARING,\r\n    category: CATEGORIES.PERSONAL,\r\n    comment: 'q_P3_comment',\r\n    text: 'q_P3_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n  },\r\n  {\r\n    id: QUESTION.WORKSPACE,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P4_text',\r\n    inputType: 'radio',\r\n    options: ['q_P4_option0', 'q_P4_option1', 'q_P4_option2'],\r\n  },\r\n  {\r\n    id: 'P5',\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P5_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n  },\r\n  {\r\n    id: 'P6',\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P6_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'C0',\r\n    category: CATEGORIES.CONTACT,\r\n    comment: 'q_C0_comment',\r\n    text: 'q_C0_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    nextQuestionMap: ['CZ', 'S0'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: QUESTION.CONTACT_DATE,\r\n    category: CATEGORIES.CONTACT,\r\n    text: 'q_CZ_text',\r\n    inputType: 'date',\r\n  },\r\n  {\r\n    id: 'S0',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    comment: null,\r\n    text: 'q_S0_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    nextQuestionMap: ['S2', 'S1'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S1',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    comment: null,\r\n    text: 'q_S1_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    nextQuestionMap: ['S2', 'S3'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S2',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    comment: null,\r\n    text: 'q_S2_text',\r\n    inputType: 'radio',\r\n    options: [\r\n      '',\r\n      'q_S2_option1',\r\n      'q_S2_option2',\r\n      'q_S2_option3',\r\n      'q_S2_option4',\r\n      'q_S2_option5',\r\n      'q_S2_option6',\r\n      'q_S2_option7',\r\n    ],\r\n  },\r\n  {\r\n    id: 'S3',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_S3_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S4',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_S4_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S5',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_S5_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S6',\r\n    category: CATEGORIES.RESPIRATORY_SYMPTOMS,\r\n    comment: 'q_S6_comment',\r\n    text: 'q_S6_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S7',\r\n    category: CATEGORIES.RESPIRATORY_SYMPTOMS,\r\n    comment: 'q_S7_comment',\r\n    text: 'q_S7_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S8',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    comment: 'q_S8_comment',\r\n    text: 'q_S8_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'S9',\r\n    category: CATEGORIES.RESPIRATORY_SYMPTOMS,\r\n    text: 'q_S9_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'SA',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_SA_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: QUESTION.OUT_OF_BREATH,\r\n    category: CATEGORIES.RESPIRATORY_SYMPTOMS,\r\n    comment: 'q_SB_comment',\r\n    text: 'q_SB_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: 'SC',\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_SC_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n    scoreMap: [1, 0],\r\n  },\r\n  {\r\n    id: QUESTION.SYMPTOM_DATE,\r\n    category: CATEGORIES.SYMPTOMS,\r\n    text: 'q_SZ_text',\r\n    inputType: 'date'/* ,\r\n    guard: new Disjunction([\r\n      new Condition(CATEGORIES.SYMPTOMS, 1, null),\r\n      new Condition(CATEGORIES.RESPIRATORY_SYMPTOMS, 1, null),\r\n    ]), */\r\n  },\r\n  {\r\n    id: 'D0',\r\n    category: CATEGORIES.ILLNESS,\r\n    text: 'q_D0_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'D1',\r\n    category: CATEGORIES.ILLNESS,\r\n    text: 'q_D1_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'D2',\r\n    category: CATEGORIES.ILLNESS,\r\n    text: 'q_D2_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'D3',\r\n    category: CATEGORIES.ILLNESS,\r\n    text: 'q_D3_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'M0',\r\n    category: CATEGORIES.MEDICATION,\r\n    text: 'q_M0_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'M1',\r\n    category: CATEGORIES.MEDICATION,\r\n    comment: 'q_M1_comment',\r\n    text: 'q_M1_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no', 'answer_unknown'],\r\n  },\r\n  {\r\n    id: 'M2',\r\n    category: CATEGORIES.MEDICATION,\r\n    text: 'q_M2_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n  },\r\n];\r\n\r\nexport const QUESTIONNAIRE_ORDER_SMALL = [\r\n  {\r\n    id: QUESTION.AGE,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P0_text',\r\n    inputType: 'radio',\r\n    options: [\r\n      'q_P0_option0',\r\n      'q_P0_option1',\r\n      'q_P0_option2',\r\n      'q_P0_option3',\r\n      'q_P0_option4',\r\n      'q_P0_option5',\r\n    ],\r\n    nextQuestionMap: ['P2', 'P2', 'P2', 'P1', 'P2', 'P2'],\r\n  },\r\n  {\r\n    id: QUESTION.ABOVE_65,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P1_text',\r\n    inputType: 'radio',\r\n    options: ['answer_yes', 'answer_no'],\r\n  },\r\n  {\r\n    id: QUESTION.LIVING_SITUATION,\r\n    category: CATEGORIES.PERSONAL,\r\n    text: 'q_P2_text',\r\n    inputType: 'radio',\r\n    options: ['q_P2_option0', 'q_P2_option1'],\r\n  },\r\n  {\r\n    id: QUESTION.CONTACT_DATE,\r\n    category: CATEGORIES.CONTACT,\r\n    text: 'q_CZ_text',\r\n    inputType: 'date',\r\n  }\r\n]\r\n","\r\nimport QUESTIONNAIRE_DE from \"./de\"\r\nimport QUESTIONNAIRE_EN from \"./en\"\r\n\r\nexport const QUESTIONNAIRE = {\r\n  de: QUESTIONNAIRE_DE,\r\n  en: QUESTIONNAIRE_EN\r\n}","//import fetch from \"cross-fetch\"\r\nimport { uuid } from \"uuidv4\"\r\nimport fileDownload from \"js-file-download\"\r\nimport JSZip from \"jszip\"\r\nimport {\r\n  setQuestionnaireStrings,\r\n  setQuestionnaireOrder,\r\n  setLanguage,\r\n  setCreatedJSON,\r\n  setAmazonConnectData,\r\n  addKey,\r\n  setQuestionCount,\r\n  setBasename\r\n} from \"./actions\"\r\n\r\nimport cf from \"./amazon-connect/contactflow\"\r\nimport { defaultText } from \"./questions/defaultText\"\r\n\r\nimport { QUESTIONNAIRE_ORDER } from \"./foo\" /* \"./questionnaire_order\" */\r\nimport { QUESTIONNAIRE } from  \"./bar\" /* \"./questionnaire_strings\" */\r\n\r\n\r\n// TODO: implement a real fetch from  https://covapp.charite.de/\r\nexport const fetchData = () => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(\"https://covapp.charite.de/\");\r\n        \r\n        if (res.status >= 400) {\r\n          throw new Error(\"Bad response from server\");\r\n        }\r\n        \r\n        const user = await res.text();\r\n        console.log(res)\r\n        //console.log(url)\r\n        console.log(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    })()\r\n}\r\n\r\nexport const fetchDataMock = url => {\r\n  return dispatch => {\r\n    if (url === 'stringMap') {\r\n      dispatch(setQuestionnaireStrings(QUESTIONNAIRE))\r\n    } else {\r\n      dispatch(setQuestionnaireOrder(QUESTIONNAIRE_ORDER))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getQuestionsAndGenerateJSONMock = url => {\r\n  return dispatch => {\r\n    dispatch(setQuestionnaireStrings(QUESTIONNAIRE))\r\n    dispatch(setQuestionnaireOrder(QUESTIONNAIRE_ORDER))\r\n    dispatch(createJSON())\r\n  }\r\n}\r\n\r\nexport const handleLanguageChange = language => {\r\n  return dispatch => {\r\n    dispatch(setLanguage(language))\r\n  }\r\n}\r\n\r\nexport const createRadioQuestion = (question, strings) => {\r\n  let options = question.options.map(option => strings[option])\r\n  return Object.assign({}, question, {\r\n    id: question.id,\r\n    text: strings[question.text],\r\n    options: options,\r\n    nextQuestionMap: question.nextQuestionMap,\r\n    comment: strings[question.comment]\r\n  })\r\n}\r\n\r\nexport const createDateQuestion = (question, strings) => {\r\n  return Object.assign({}, question, {\r\n    id: question.id,\r\n    text: strings[question.text]\r\n  })\r\n}\r\n\r\nexport const createJSON = () => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const { order, stringMap, language } = state.creator\r\n    const strings = stringMap[language].keys\r\n    const data = order.map(question => {\r\n\r\n      if (question.inputType === 'date') {\r\n        return createDateQuestion(question, strings)\r\n      } else {\r\n        return createRadioQuestion(question, strings)\r\n      }\r\n    })\r\n    dispatch(setCreatedJSON(data))\r\n  }\r\n}\r\n\r\nexport const handleSetBasename = value => {\r\n  return dispatch => {\r\n    dispatch(setBasename(value))\r\n  }\r\n}\r\n\r\nexport const createJSONFromQuestionCatalog = () => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const data = state.questioncatalog.questions\r\n    dispatch(setCreatedJSON(data))\r\n  }\r\n}\r\n\r\nexport const downloadJSON = (jsonMap, language) => {\r\n  const zip = new JSZip();\r\n \r\n  Object.keys(jsonMap).forEach((key, x) => {\r\n      zip.file(`${key}.json`, JSON.stringify(jsonMap[key], null, 4))\r\n\r\n  })\r\n  zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n    fileDownload(content, \"example.zip\")\r\n  })\r\n  \r\n  return {type: ''}\r\n}\r\n\r\nexport const handleQuestionCount = questionCount => {\r\n  return dispatch => {\r\n    dispatch(setQuestionCount(questionCount))\r\n  }\r\n}\r\n\r\nexport const createContactFlow = () => {\r\n  return (dispatch, getState) => {\r\n    let state = getState()\r\n\r\n    const basename = state.creator.basename\r\n    const questions = state.creator.chariteData.questions\r\n    const language = state.creator.language\r\n    const scoreMap = state.questioncatalog.scoreThresholdMap\r\n\r\n    const questionIDList = []\r\n    questions.forEach(question => {\r\n      questionIDList.push(question.id)\r\n    })\r\n\r\n    const questionIDSet = new Set(questionIDList)\r\n    const uuidMap = {}\r\n    const xxxMap = Array.from(new Set(questionIDList.map(q => {return {key: q, uuid: uuid()}})))\r\n\r\n    // Set sadly has no map method :(\r\n    questionIDSet.forEach(id => {\r\n      uuidMap[id] =  uuid()\r\n    })\r\n\r\n    let qCount = 0\r\n\r\n    questions.forEach((question, i) => {\r\n\r\n      const contactFlowName = `${basename}_${i}`//`question_${i}_${language}`\r\n      let contactFlow\r\n      if (question.inputType === 'radio') {\r\n        contactFlow = cf.ContactFlowQuestion({\r\n          name: contactFlowName,\r\n          basename: basename,\r\n          getState: getState,\r\n          uuidMap: uuidMap,\r\n          xxxMap: xxxMap,\r\n          question: question,\r\n          index: i,\r\n          addKey: addKey,\r\n          dispatch: dispatch,\r\n          language: language,\r\n          errorText: defaultText.errorText[language],\r\n          repeatText: defaultText.repeatText[language]\r\n        })\r\n      } else {\r\n        contactFlow = cf.ContactFlowQuestionDate({\r\n          name: contactFlowName,\r\n          basename: basename,\r\n          getState: getState,\r\n          uuidMap: uuidMap,\r\n          xxxMap: xxxMap,\r\n          question: question,\r\n          index: i,\r\n          addKey: addKey,\r\n          dispatch: dispatch,\r\n          language: language,\r\n          errorText: defaultText.errorText[language],\r\n          repeatText: defaultText.repeatText[language]\r\n        })\r\n      }\r\n      \r\n      qCount++\r\n      dispatch(setAmazonConnectData({[contactFlowName]: contactFlow}))\r\n    })\r\n    dispatch(setQuestionCount(qCount))\r\n\r\n    const staticStartName = `${basename}_start`//`question_start_${language}` \"automated_charite_data_start_en\"//\r\n    const staticStart = cf.ContactFlowStaticStart({\r\n      name: staticStartName,\r\n      text: defaultText.greetingText[language],\r\n      language: language,\r\n      firstQuestionName: `${basename}_0`,\r\n      scoreMap: scoreMap\r\n    })\r\n    dispatch(setAmazonConnectData({[staticStartName]: staticStart}))    \r\n\r\n    //state = getState()\r\n\r\n    const staticEndName = `${basename}_end`//`question_end_${language}` \"automated_charite_data_end_en\"//\r\n    const staticEnd = cf.ContactFlowStaticEnd({name: staticEndName, getState: getState, language: language})\r\n    dispatch(setAmazonConnectData({[staticEndName]: staticEnd}))\r\n    console.log(\"blyat\", getState())\r\n  }\r\n}","import { connect } from \"react-redux\"\r\nimport AmazonConnectConfiguratorComponent from \"./AmazonConnectConfiguratorComponent\"\r\n\r\nimport { \r\n  createJSON,\r\n  downloadJSON,\r\n  createContactFlow,\r\n  handleSetBasename\r\n} from \"./duck/operations\"\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  chariteData: state.creator.chariteData,\r\n  connectConf: state.creator.connectConf,\r\n  lambdaKeys: state.creator.lambdaKeys,\r\n  language: state.creator.language,\r\n  basename: state.creator.basename // TODO: better name?\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  createJSON,\r\n  createContactFlow,\r\n  downloadJSON,\r\n  handleSetBasename\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AmazonConnectConfiguratorComponent)","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\"\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Accordion from \"react-bootstrap/Accordion\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Octicon, { Dependent }from \"@primer/octicons-react\"\r\n\r\nimport  AmazonSettings from \"./AmazonConnectConfiguratorContainer\" \r\n\r\n\r\nexport const defaultProps = {\r\n  availableLanguages: [\r\n    {key: 'en', display: 'English'},\r\n    {key: 'de', display: 'Deutsch'}\r\n  ]\r\n}\r\n\r\nexport const CreatorComponent = props => {\r\n\r\n  const {\r\n    order,\r\n    stringMap,\r\n    getQuestionsAndGenerateJSONMock,\r\n    availableLanguages,\r\n    handleLanguageChange,\r\n    language,\r\n    chariteData,\r\n    connectConf,\r\n    createJSONFromQuestionCatalog\r\n  } = props\r\n\r\n  // TODO: rename this\r\n  const bla = {\r\n    stringMap: stringMap[language],\r\n    order: order,\r\n    chariteData: chariteData,\r\n    connectConf: connectConf\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div style={{textAlign: \"center\", color: \"white !important\"}}><Link to=\"/questions\"><Button>Back to Generator</Button></Link></div>\r\n      <h1>TODO: Add tooltips or some general usage guide</h1>\r\n      <ButtonToolbar>\r\n        <ButtonGroup className=\"mr-2\" size=\"sm\">\r\n        {\r\n          // TODO: use something else instead of buttons\r\n          availableLanguages.map(lang =>\r\n          <Button size=\"xs\" variant={language === lang.key ? \"success\" : \"secondary\"} key={lang.key} onClick={() => handleLanguageChange(lang.key)}>{lang.display}</Button>\r\n            ) \r\n        }\r\n        </ButtonGroup>\r\n        <ButtonGroup className=\"mr-2\" size=\"sm\">\r\n          <Button onClick={getQuestionsAndGenerateJSONMock}>Get Questions Mock</Button>\r\n          <Button variant=\"warning\" onClick={createJSONFromQuestionCatalog}>\r\n            <Octicon><Dependent /></Octicon>\r\n          </Button>\r\n        </ButtonGroup>\r\n        {chariteData ? <AmazonSettings /> : null}\r\n\r\n      </ButtonToolbar>\r\n      <Accordion>\r\n        {\r\n          Object.keys(bla).map((key, i) => \r\n            <Card key={\"Card\" + i}>\r\n              <Accordion.Toggle as={Card.Header} eventKey={i}>\r\n                { \"Show \" + key + \" JSON\"}\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={i}>\r\n                <Card.Body>\r\n                <Form.Group controlId={\"controlTextarea\" + i}>\r\n                  <Form.Label>{key}</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows=\"50\" value={bla[key] && JSON.stringify(bla[key], null, 4)} disabled/>\r\n                </Form.Group>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          )\r\n        }\r\n      </Accordion>\r\n    </Container>\r\n  )\r\n}\r\n\r\nCreatorComponent.defaultProps = defaultProps\r\n\r\nexport default CreatorComponent","import { connect } from \"react-redux\"\r\nimport CreatorComponent from \"./CreatorComponent\"\r\nimport { \r\n  getQuestionsAndGenerateJSONMock,\r\n  handleLanguageChange,\r\n  createJSONFromQuestionCatalog\r\n} from \"./duck/operations\"\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  order: state.creator.order,\r\n  stringMap: state.creator.stringMap,\r\n  language: state.creator.language,\r\n  chariteData: state.creator.chariteData,\r\n  connectConf: state.creator.connectConf,\r\n  lambdaKeys: state.creator.lambdaKeys\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  getQuestionsAndGenerateJSONMock,\r\n  handleLanguageChange,\r\n  createJSONFromQuestionCatalog\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatorComponent)","import React from \"react\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Octicon, { Trashcan, Plus }from \"@primer/octicons-react\"\r\n\r\nexport const RadioOptionComponent = props => {\r\n  const {\r\n    question,\r\n    newRadioOption,\r\n    handleUpdateRadioOption,\r\n    handleUpdateNewRadioOption,\r\n    handleAddNewRadioOption,\r\n    handleRemoveRadioOption\r\n  } = props\r\n\r\n  const content = question.options === undefined\r\n    ? null\r\n    : (\r\n\r\n        <Col xs={4}>\r\n            {question.options.map((opt, i) => \r\n                <Row key={`newQuestion-option-${question.id}-${i}`}>\r\n                <Col xs={6}>\r\n                  <FormControl as=\"textarea\" value={opt} onChange={(event) => handleUpdateRadioOption(event.target.value, question.uuid, i)} />\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Button variant=\"danger\" onClick={() => handleRemoveRadioOption(question.uuid, i)}>\r\n                    <Octicon><Trashcan /></Octicon>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            <FormControl\r\n              as=\"textarea\"\r\n              placeholder=\"TODO: open modal on button click to enter radio option text \"\r\n              value={newRadioOption}\r\n              onChange={(event) => handleUpdateNewRadioOption(event.target.value)}\r\n            />\r\n            <Button variant=\"primary\" disabled={newRadioOption.length === 0} onClick={() => handleAddNewRadioOption(newRadioOption, question.uuid)}>\r\n              <Octicon><Plus /></Octicon>\r\n            </Button>\r\n        </Col>\r\n\r\n    )\r\n  return content\r\n}\r\n\r\nexport default RadioOptionComponent","import { uuid } from \"uuidv4\"\r\nimport {\r\n  removeQuestion,\r\n  addQuestion,\r\n  moveQuestion,\r\n  changeQuestionAttribute,\r\n  updateNewRadioOption,\r\n  toggleNewQuestionModal,\r\n  changeNewQuestionAttribute,\r\n  setErrorMessage,\r\n  updateRecomThreshold,\r\n  updateRecomText\r\n} from \"./actions\"\r\n\r\n// TODO: order this!\r\n\r\nexport const handleRemoveQuestion = question => {\r\n  return dispatch => {\r\n    dispatch(removeQuestion(question))\r\n  }\r\n}\r\n\r\nexport const handleAddQuestion = () => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const { questions } = state.questioncatalog.questions\r\n    let newQuestion = state.questioncatalog.newQuestion\r\n    const isUniqueQuestion = questions.find(q => q.id === newQuestion.id) === undefined // there is no such question\r\n    if (isUniqueQuestion) {\r\n      const newQuestionUUID = uuid()\r\n      newQuestion = Object.assign({}, newQuestion, { uuid: newQuestionUUID })\r\n      dispatch(addQuestion(newQuestion))\r\n      dispatch(toggleNewQuestionModal(false))\r\n    } else {\r\n      // display error so user can change question id\r\n      dispatch(setErrorMessage(`Question with name ${newQuestion.id} already exists!`))\r\n    }\r\n  }\r\n}\r\n\r\nexport const handleMoveQuestion = (uuid, direction) => {\r\n  return dispatch => {\r\n    dispatch(moveQuestion(uuid, direction))\r\n  }\r\n}\r\n\r\nexport const handleChangeQuestionID = (value, uuid) => {\r\n  return dispatch => {\r\n    dispatch(changeQuestionAttribute(value, \"id\", uuid))\r\n  }\r\n}\r\n\r\nexport const handleChangeQuestionText = (value, uuid) => {\r\n  return dispatch => {\r\n    dispatch(changeQuestionAttribute(value, \"text\", uuid))\r\n  }\r\n}\r\n\r\nexport const handleChangeQuestionCategory = (value, uuid) => {\r\n  return dispatch => {\r\n    dispatch(changeQuestionAttribute(value, \"category\", uuid))\r\n  }\r\n}\r\n\r\nexport const changeChangeQuestionType = (value, uuid) => {\r\n  return dispatch => {\r\n    dispatch(changeQuestionAttribute(value, \"inputType\", uuid))\r\n    dispatch(changeQuestionAttribute(undefined, \"scoreMap\", uuid))\r\n    dispatch(changeQuestionAttribute(undefined, \"nextQuestionMap\", uuid))\r\n    if(value === \"radio\") {\r\n      dispatch(changeQuestionAttribute([], \"options\", uuid))\r\n    } else {\r\n      dispatch(changeQuestionAttribute(undefined, \"options\", uuid))\r\n    }\r\n  }\r\n}\r\n\r\nexport const handleUpdateRadioOption = (value, uuid, index) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n    const options = targetQuestion.options\r\n    options[index] = value\r\n    dispatch(changeQuestionAttribute(options, \"options\", uuid))\r\n  }\r\n}\r\n\r\nexport const handleRemoveRadioOption = (uuid, index) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n    const options = targetQuestion.options.filter((opt,i) => i !== index)\r\n    if(targetQuestion.hasOwnProperty(\"nextQuestionMap\")) {\r\n      const nextQuestionMap = targetQuestion.nextQuestionMap.filter((opt,i) => i !== index)\r\n      dispatch(changeQuestionAttribute(nextQuestionMap, \"nextQuestionMap\", uuid))\r\n    }\r\n    if(targetQuestion.hasOwnProperty(\"scoreMap\")) {\r\n      const scoreMap = targetQuestion.scoreMap.filter((opt,i) => i !== index)\r\n      dispatch(changeQuestionAttribute(scoreMap, \"scoreMap\", uuid))\r\n    }\r\n    dispatch(changeQuestionAttribute(options, \"options\", uuid))\r\n    \r\n  }\r\n}\r\n\r\nexport const handleAddNewRadioOption = (option, uuid) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n    if(targetQuestion.hasOwnProperty(\"nextQuestionMap\")) {\r\n      const nextQuestionMap = targetQuestion.nextQuestionMap\r\n      nextQuestionMap.push(\"\")\r\n      dispatch(changeQuestionAttribute(nextQuestionMap, \"nextQuestionMap\", uuid))\r\n    }\r\n    if(targetQuestion.hasOwnProperty(\"scoreMap\")) {\r\n      const scoreMap = targetQuestion.scoreMap\r\n      scoreMap.push(0)\r\n      dispatch(changeQuestionAttribute(scoreMap, \"scoreMap\", uuid))\r\n    }\r\n    const options = targetQuestion.options\r\n    options.push(option)\r\n    dispatch(changeQuestionAttribute(options, \"options\", uuid))\r\n    dispatch(updateNewRadioOption(\"\"))\r\n  }\r\n}\r\n\r\nexport const handleUpdateNewRadioOption = option => {\r\n  return dispatch => {\r\n    dispatch(updateNewRadioOption(option))\r\n  }\r\n}\r\n\r\nexport const handleToggleNextQuestionMap = (event, uuid) => {\r\n  return (dispatch, getState) => {\r\n    if (event.target.checked) {\r\n      const state = getState()\r\n      const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n      const nextQuestionMap = targetQuestion.options.map(opt => 0)\r\n      dispatch(changeQuestionAttribute(nextQuestionMap, \"nextQuestionMap\", uuid))\r\n    }\r\n    else {\r\n      dispatch(changeQuestionAttribute(undefined, \"nextQuestionMap\", uuid))\r\n    }\r\n  }\r\n}\r\n\r\nexport const handleToggleScoreMap = (event, uuid) => {\r\n  return (dispatch, getState) => {\r\n    if (event.target.checked) {\r\n      const state = getState()\r\n      const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n      const options = targetQuestion.options.map(opt => 0)\r\n\r\n      dispatch(changeQuestionAttribute(options, \"scoreMap\", uuid))\r\n    }\r\n    else {\r\n      dispatch(changeQuestionAttribute(undefined, \"scoreMap\", uuid))\r\n    }\r\n  }\r\n}\r\n\r\nexport const handleUpdateNextQuestionMapOption = (value, uuid, index) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n    const nextQuestionMap = targetQuestion.nextQuestionMap\r\n    nextQuestionMap[index] = value\r\n    dispatch(changeQuestionAttribute(nextQuestionMap, \"nextQuestionMap\", uuid))\r\n  }\r\n}\r\n\r\nexport const handleUpdateScoreMapOption = (value, uuid, index) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState()\r\n    const targetQuestion = state.questioncatalog.questions.questions.find(q => q.uuid === uuid)\r\n    const scoreMap = targetQuestion.scoreMap\r\n    scoreMap[index] = value\r\n    dispatch(changeQuestionAttribute(scoreMap, \"scoreMap\", uuid))\r\n  }\r\n}\r\n\r\nexport const handleToggleNewQuestionModal = value => {\r\n  return dispatch => {\r\n    dispatch(toggleNewQuestionModal(value))\r\n  }\r\n}\r\n\r\nexport const handleChangeNewQuestion = (value, key) => {\r\n  return dispatch => {\r\n    dispatch(changeNewQuestionAttribute(value, key))\r\n  }\r\n}\r\n\r\n\r\nexport const handleUpdateRecomThreshold = (value, category) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateRecomThreshold(value, category))\r\n  }\r\n}\r\n\r\n\r\nexport const handleUpdateRecomText = (value, category, key) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateRecomText(value, category, key))\r\n  }\r\n}","import { connect } from \"react-redux\"\r\nimport RadioOptionComponent from \"./RadioOptionComponent\"\r\nimport {\r\n  handleUpdateRadioOption,\r\n  handleUpdateNewRadioOption,\r\n  handleAddNewRadioOption,\r\n  handleRemoveRadioOption\r\n} from \"./duck/operations\"\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  question: ownProps.existingQuestion ? state.questioncatalog.questions.questions.find(q => q === ownProps.existingQuestion) : state.questioncatalog.newQuestion,\r\n  newRadioOption: state.questioncatalog.newRadioOption.newRadioOption\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleUpdateRadioOption,\r\n  handleUpdateNewRadioOption,\r\n  handleAddNewRadioOption,\r\n  handleRemoveRadioOption\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioOptionComponent)","import React from \"react\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\nexport const NextQuestionMapComponent = props => {\r\n  const {\r\n    handleUpdateNextQuestionMapOption,\r\n    question,\r\n    questions\r\n  } = props\r\n\r\n  const content = question.nextQuestionMap === undefined\r\n    ? null\r\n    : (\r\n      <Col xs={4}>\r\n        {question.nextQuestionMap.map((opt, i) =>\r\n        <Row key={`nextQuestion-option-${i}`}>\r\n          <Col xs={6}>Option {question.options[i]} leads to Question: </Col>\r\n          <Col xs={6}>\r\n          <FormControl as=\"select\"\r\n            value={opt}\r\n            onChange={(event) => handleUpdateNextQuestionMapOption(event.target.value, question.uuid, i)}\r\n          >\r\n            <option defaultValue=\"\">Please select</option>\r\n            {questions.map((q, j) => <option key={`nextQuestion-option-${i}-${j}`} defaultValue={q.id === opt}>{q.id}</option>)}\r\n          </FormControl>\r\n          </Col>\r\n        </Row>\r\n        )}\r\n      </Col>\r\n    )\r\n    return content\r\n}\r\n\r\nexport default NextQuestionMapComponent","import { connect } from \"react-redux\"\r\nimport NextQuestionMapComponent from \"./NextQuestionMapComponent\"\r\nimport {\r\n  handleUpdateNextQuestionMapOption\r\n} from \"./duck/operations\"\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  question: ownProps.existingQuestion ? state.questioncatalog.questions.questions.find(q => q === ownProps.existingQuestion) : state.questioncatalog.newQuestion,\r\n  questions: state.questioncatalog.questions.questions\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleUpdateNextQuestionMapOption\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionMapComponent)","import React from \"react\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\n\r\nexport const ScoreComponent = props => {\r\n  const {\r\n    handleUpdateScoreMapOption,\r\n    question,\r\n  } = props\r\n  const content = question.scoreMap === undefined\r\n    ? null\r\n    : (\r\n      <Col xs={4}>\r\n        {question.scoreMap.map((s,i) =>\r\n          <FormControl key={`score-${question.uuid}-${i}`} value={s} onChange={(event) => handleUpdateScoreMapOption(event.target.value, question.uuid, i)}/>\r\n        )}\r\n      </Col>\r\n    )\r\n  return content\r\n}\r\n\r\nexport default ScoreComponent","import { connect } from \"react-redux\"\r\nimport ScoreComponent from \"./ScoreComponent\"\r\nimport {\r\n  handleUpdateScoreMapOption\r\n} from \"./duck/operations\"\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  question: ownProps.existingQuestion ? ownProps.existingQuestion : state.questioncatalog.newQuestion,\r\n  questions: state.questioncatalog.questions.questions\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleUpdateScoreMapOption\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreComponent)","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Badge from \"react-bootstrap/Badge\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Octicon, { ArrowDown, ArrowUp, Trashcan } from \"@primer/octicons-react\"\r\nimport RadioOption from \"./RadioOptionContainer\"\r\nimport NextQuestionMap from \"./NextQuestionMapContainer\"\r\nimport Score from \"./ScoreContainer\"\r\n\r\n\r\n/* https://primer.style/octicons/packages/react */\r\n\r\nexport const defaultProps = {\r\n  categoryMap: {\r\n    contact: \"danger\",\r\n    personalInfo: \"success\",\r\n    symptoms: \"warning\",\r\n    respiratorySymptoms: \"primary\",\r\n    illnesses: \"dark\",\r\n    medication: \"secondary\"\r\n  },\r\n  inputTypes: [\"radio\", \"date\"],\r\n  categories: [\"contact\", \"personalInfo\", \"symptoms\", \"respiratorySymptoms\", \"illnesses\", \"medication\"]\r\n}\r\n\r\nexport const propTypes = {\r\n  text: PropTypes.string\r\n}\r\n\r\n\r\nexport const QuestionComponent = props => {\r\n\r\n  const {\r\n    uuid,\r\n    question,\r\n    handleRemoveQuestion,\r\n    handleToggleNextQuestionMap,\r\n    handleToggleScoreMap,\r\n    handleMoveQuestion,\r\n    index,\r\n    total,\r\n    categoryMap,\r\n    inputTypes,\r\n    handleChangeQuestionID,\r\n    handleChangeQuestionText,\r\n    handleChangeQuestionCategory,\r\n    changeChangeQuestionType\r\n  } = props\r\n\r\n  return (\r\n    <Row style={{ border: \"solid red 1px\" }}>\r\n      <Col xs={1}>\r\n        <Badge variant={categoryMap[question.category]}>{question.category}</Badge>\r\n        <Badge variant=\"secondary\">{question.inputType}</Badge>\r\n      </Col>\r\n      <Col xs={3}>\r\n        <FormControl value={question.id} onChange={(event) => handleChangeQuestionID(event.target.value, uuid)} />\r\n      </Col>\r\n      <Col xs={3}>\r\n        <FormControl as=\"select\" onChange={(event) => handleChangeQuestionCategory(event.target.value, uuid)} value={question.category}>\r\n          {Object.keys(categoryMap).map((cat, i) => <option key={`category-question-${question.id}-${i}`}>{cat}</option>)}\r\n        </FormControl>\r\n      </Col>\r\n      <Col xs={3}>\r\n        <FormControl as=\"select\" onChange={(event) => changeChangeQuestionType(event.target.value, uuid)} value={question.inputType}>\r\n          {inputTypes.map((t, i) => <option key={`inputType-question-${question.id}-${i}`}>{t}</option>)}\r\n        </FormControl>\r\n      </Col>\r\n      {question.options\r\n        ?\r\n        <Col xs={2}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"fork\"\r\n            checked={question.nextQuestionMap !== undefined}\r\n            onChange={(event) => handleToggleNextQuestionMap(event, uuid)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"scored\"\r\n            checked={question.scoreMap !== undefined}\r\n            onChange={(event) => handleToggleScoreMap(event, uuid)}\r\n          />\r\n        </Col>\r\n        : null\r\n      }\r\n      <Col xs={9}>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder=\"Enter question text\"\r\n          value={question.text}\r\n          onChange={(event) => handleChangeQuestionText(event.target.value, uuid)}\r\n        />\r\n      </Col>\r\n      <Col xs={3}>\r\n        <Button variant=\"outline-secondary\" disabled={index === 0} onClick={() => handleMoveQuestion(uuid, -1)}>\r\n          <Octicon><ArrowUp /></Octicon>\r\n        </Button>\r\n        <Button variant=\"outline-secondary\" disabled={total === index} onClick={() => handleMoveQuestion(uuid, 1)}>\r\n          <Octicon><ArrowDown /></Octicon>\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={() => handleRemoveQuestion(uuid)}>\r\n          <Octicon><Trashcan /></Octicon>\r\n        </Button>\r\n      </Col>\r\n      <RadioOption existingQuestion={question} />\r\n      <Score existingQuestion={question} />\r\n      <NextQuestionMap existingQuestion={question} />\r\n    </Row>\r\n\r\n  )\r\n}\r\n\r\nQuestionComponent.propTypes = propTypes\r\nQuestionComponent.defaultProps = defaultProps\r\n\r\nexport default QuestionComponent","import { connect } from \"react-redux\"\r\nimport QuestionComponent from \"./QuestionComponent\"\r\nimport {\r\n  handleRemoveQuestion,\r\n  handleMoveQuestion,\r\n  handleToggleNextQuestionMap,\r\n  handleToggleScoreMap,\r\n  handleChangeQuestionID,\r\n  handleChangeQuestionText,\r\n  handleChangeQuestionCategory,\r\n  changeChangeQuestionType\r\n} from \"./duck/operations\"\r\n\r\n// TODO: bundle opereation e.g import questionContainerOperations from ./duck/operations\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  index: state.questioncatalog.questions.questions.findIndex(q => q.uuid === ownProps.uuid),\r\n  total: state.questioncatalog.questions.questions.length - 1\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleToggleNextQuestionMap,\r\n  handleToggleScoreMap,\r\n  handleRemoveQuestion,\r\n  handleMoveQuestion,\r\n  handleChangeQuestionID,\r\n  handleChangeQuestionCategory,\r\n  changeChangeQuestionType,\r\n  handleChangeQuestionText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionComponent)","import React from \"react\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Alert from \"react-bootstrap/Alert\"\r\n\r\nexport const defaultProps = {\r\n  questionTypes: ['radio', 'date'],\r\n  categories: [\r\n    \"contact\",\r\n    \"personalInfo\",\r\n    \"symptoms\",\r\n    \"respiratorySymptoms\",\r\n    \"illnesses\",\r\n    \"medication\"\r\n  ]\r\n}\r\n\r\nexport const AddQuestionComponent = props => {\r\n\r\n  const {\r\n    newQuestion,\r\n    handleToggleNewQuestionModal,\r\n    handleChangeNewQuestion,\r\n    handleAddQuestion,\r\n    errorMessage,\r\n    questionTypes,\r\n    categories\r\n  } = props\r\n  const { id, category, text, inputType, showNewQuestionModal } = newQuestion\r\n  const requiredData = [id, category, text, inputType]\r\n\r\n  return (\r\n    <div style={{textAlign: \"center\"}}>\r\n      <Button variant=\"success\" onClick={() => handleToggleNewQuestionModal(!showNewQuestionModal)}>\r\n        Create New Question\r\n      </Button>\r\n      <Modal show={showNewQuestionModal} onHide={() => handleToggleNewQuestionModal(false)}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n\r\n            {errorMessage !== \"\" ? <Alert variant=\"danger\" style={{width: \"100%\", textAlign: \"center\"}}>{errorMessage}</Alert> : null}\r\n\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <FormControl placeholder=\"Enter new question name\"\r\n                defaultValue={id} onChange={(event) => handleChangeNewQuestion(event.target.value, \"id\")} />\r\n            </Col>\r\n            <Col xs={6}>\r\n              <FormControl placeholder=\"Enter new question text\"\r\n                defaultValue={text} onChange={(event) => handleChangeNewQuestion(event.target.value, \"text\")} />\r\n            </Col>\r\n            <Col xs={6}>\r\n              <FormControl as=\"select\" defaultValue={inputType}\r\n                onChange={(event) => handleChangeNewQuestion(event.target.value, \"inputType\")}>\r\n                <option>Please select type</option>\r\n                {questionTypes.map((t,i) => \r\n                  <option key={`newQuestionInputType-${t}`}\r\n                    defaultChecked={t===inputType}>{t}</option>\r\n                )}\r\n              </FormControl>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <FormControl as=\"select\" defaultValue={category}\r\n                onChange={(event) => handleChangeNewQuestion(event.target.value, \"category\")}>\r\n                <option>Please select category</option>\r\n                {categories.map((c,i) => \r\n                  <option key={`newQuestionCategory-${c}`}\r\n                    defaultChecked={c===category}>{c}</option>\r\n                )}\r\n              </FormControl>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"justify-content-between\">\r\n          <Button variant=\"success\" disabled={requiredData.some(d => [\"\", null, undefined].includes(d))} block onClick={handleAddQuestion}>\r\n            Add Question\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nAddQuestionComponent.defaultProps = defaultProps\r\n\r\nexport default AddQuestionComponent","import { connect } from \"react-redux\"\r\nimport AddQuestionComponent from \"./AddQuestionComponent\"\r\nimport {\r\n  handleToggleNewQuestionModal,\r\n  handleChangeNewQuestion,\r\n  handleAddQuestion\r\n} from \"./duck/operations\"\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  newQuestion: state.questioncatalog.newQuestion,\r\n  errorMessage : state.questioncatalog.messages.errorMessage\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleToggleNewQuestionModal,\r\n  handleChangeNewQuestion,\r\n  handleAddQuestion\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddQuestionComponent)","import React from \"react\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport FormControl from \"react-bootstrap/FormControl\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Badge from \"react-bootstrap/badge\"\r\n\r\nexport const ScoreThresholdMapComponent = props => {\r\n  const {\r\n    scoreThresholdMap,\r\n    handleUpdateRecomThreshold,\r\n    handleUpdateRecomText,\r\n    totalScoreQuestions\r\n  }  = props\r\n\r\n  const scoreThresholds = Object.keys(scoreThresholdMap).map((key, i) => {\r\n\r\n    const catTresh = scoreThresholdMap[key]\r\n\r\n    return (\r\n      <Row key={`scoreMap-${key}`}>\r\n        <Col xs={5}>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n          <InputGroup.Text><Badge>{key}: {totalScoreQuestions[key] || 0}</Badge></InputGroup.Text>\r\n          \r\n          </InputGroup.Prepend>\r\n          <FormControl value={catTresh.threshold} onChange={(event) => handleUpdateRecomThreshold(event.target.value, key)} />\r\n          \r\n        </InputGroup>\r\n        </Col>\r\n        <Col xs={3}>\r\n            <InputGroup>\r\n              <Button variant=\"outline-secondary\" onClick={() => handleUpdateRecomThreshold(catTresh.threshold + 0.1, key)}>+</Button>\r\n              <Button variant=\"outline-secondary\" onClick={() => handleUpdateRecomThreshold(catTresh.threshold + 1, key)}>++</Button>\r\n              <Button variant=\"outline-secondary\" onClick={() => handleUpdateRecomThreshold(catTresh.threshold - 1, key)}>--</Button>\r\n              <Button variant=\"outline-secondary\" onClick={() => handleUpdateRecomThreshold(catTresh.threshold - 0.1, key)}>-</Button>\r\n            </InputGroup>\r\n        </Col>\r\n        <Col xs={2}>\r\n          <FormControl value={catTresh.recoms.isDanger} onChange={(event) => handleUpdateRecomText(event.target.value, key, \"isDanger\")} />\r\n        </Col>\r\n        <Col xs={2}>\r\n          <FormControl value={catTresh.recoms.isSafe} onChange={(event) => handleUpdateRecomText(event.target.value, key, \"isSafe\")} />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  })\r\n\r\nreturn <Row>{scoreThresholds}</Row>\r\n}\r\n\r\nexport default ScoreThresholdMapComponent","import { connect } from \"react-redux\"\r\nimport ScoreThresholdComponent from \"./ScoreThresholdComponent\"\r\nimport {\r\n  handleUpdateRecomThreshold,\r\n  handleUpdateRecomText\r\n} from \"./duck/operations\"\r\n\r\n\r\n// move & rename this\r\nexport const getSomething = questions => {\r\n  const totalScoreQuestions = {}\r\n  // blyat // TODO: compete in the next obfuscating contest...\r\n  questions\r\n    .filter(q => q.hasOwnProperty(\"scoreMap\"))\r\n    .forEach(f => totalScoreQuestions.hasOwnProperty(f.category) ? totalScoreQuestions[f.category]++ : totalScoreQuestions[f.category] = 1)\r\n  return totalScoreQuestions\r\n}\r\n\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  scoreThresholdMap: state.questioncatalog.scoreThresholdMap,\r\n  categories: state.questioncatalog.categories,\r\n  totalScoreQuestions: getSomething([...state.questioncatalog.questions.questions])\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleUpdateRecomThreshold,\r\n  handleUpdateRecomText\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreThresholdComponent)","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Question from \"./QuestionContainer\"\r\nimport AddQuestion from \"./AddQuestionContainer\"\r\nimport ScoreThreshold from \"./ScoreThresholdContainer\"\r\n\r\nexport const defaultProps = {}\r\n\r\nexport const propTypes = {\r\n  questions: PropTypes.array\r\n}\r\n\r\n/* export const validText = txt => [\"\", null, undefined].every(x => x !== txt)\r\nexport const validArray = arr => arr.every(item => [\"\", null, undefined].every(x => x !== item))\r\nexport const validString = str => [\"\", null, undefined].every(x => x !== str) && str.match(/^[a-z0-9]+$/i) !== null\r\nexport const validUUID = uuid => uuid.match(/^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}/i) !== null\r\n\r\nexport const simpleSanityCheck = questions => {\r\n  return questions.every(q => {\r\n    //console.log(q)\r\n    return validUUID(q.uuid)\r\n      && validString(q.id)\r\n      && validString(q.category)\r\n      && validString(q.inputType)\r\n      && validText(q.text)\r\n      && (q.options === undefined || validArray(q.options))\r\n      && (q.nextQuestionMap === undefined || validArray(q.nextQuestionMap))\r\n      && (q.scoreMap === undefined || validArray(q.scoreMap))\r\n  })\r\n}  */\r\n\r\nexport const QuestionCatalogComponent = props => {\r\n\r\n  const {\r\n    questions\r\n  } = props\r\n  const valid = true//simpleSanityCheck(questions)\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <div style={{textAlign: \"center\"}}><Link to=\"/amazon\"><Button disabled={!valid}>Create Amazon Connect</Button></Link></div>\r\n      <ScoreThreshold/>\r\n      {questions.map(question => \r\n        <Question key={question.uuid} uuid={question.uuid} question={question} />\r\n      )}\r\n      <AddQuestion />\r\n    </Container>\r\n  )\r\n}\r\n\r\nQuestionCatalogComponent.propTypes = propTypes\r\nQuestionCatalogComponent.defaultProps = defaultProps\r\n\r\nexport default QuestionCatalogComponent","import { connect } from \"react-redux\"\r\nimport QuestionCatalogComponent from \"./QuestionCatalogComponent\"\r\nimport {\r\n  handleRemoveQuestion,\r\n  handleMoveQuestion\r\n} from \"./duck/operations\"\r\n\r\n\r\nexport const mapStateToProps = (state, ownProps) => ({\r\n  questions: state.questioncatalog.questions.questions\r\n})\r\n\r\nexport const mapDispatchToProps = {\r\n  handleRemoveQuestion,\r\n  handleMoveQuestion\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCatalogComponent)","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nexport const DemoPageComponent = props => \r\n  <Container>\r\n    <Jumbotron>\r\n    <h1>Hello, world!</h1>\r\n      <p>\r\n        This is a simple hero unit, a simple jumbotron-style component for calling\r\n        extra attention to featured content or information.\r\n      </p>\r\n      <p>\r\n        <Link to=\"/questions\"><Button>Launch Demo</Button></Link>\r\n      </p>\r\n    </Jumbotron>\r\n  </Container>\r\n\r\nexport default DemoPageComponent","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\"\r\nimport { Creator } from \"./creator\"\r\nimport { QuestionCatalog } from \"./questioncatalog\"\r\nimport { DemoPageComponent } from \"./demopage/DemoPageComponent\"\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <div>\r\n        {/* <ul>\r\n          <li><Link to=\"/\">Create Amazon Connect</Link></li>\r\n          <li><Link to=\"/questions\">Create Questions</Link></li>\r\n        </ul> */}\r\n        <hr />\r\n        <Route exact path=\"/\" component={DemoPageComponent} />\r\n        <Route exact path=\"/amazon\" component={Creator} />\r\n        <Route path=\"/questions\" component={QuestionCatalog} />\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store'\r\n\r\nimport App from './app/App'\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}